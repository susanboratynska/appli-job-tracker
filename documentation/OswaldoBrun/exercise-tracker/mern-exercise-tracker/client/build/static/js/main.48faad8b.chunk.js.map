{"version":3,"sources":["reducers/authReducers.js","actions/types.js","reducers/errorReducers.js","reducers/index.js","store.js","components/navbar.component.js","components/exercises-list.component.js","components/edit-exercises.component.js","components/create-exercises.component.js","components/create-user.component.js","components/landing.component.js","components/login.component.js","App.js","serviceWorker.js","index.js"],"names":["isEmpty","require","initialState","isAuthenticated","user","loading","state","action","type","payload","combineReducers","auth","authReducer","errors","errorReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION__COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","Navbar","className","to","Component","Exercise","props","exercise","username","description","duration","date","substring","_id","href","onClick","deleteExercises","ExercisesList","bind","exercises","axios","get","then","response","setState","data","catch","error","console","log","id","delete","res","this","filter","el","map","currentexercise","key","exercisesList","EditExercises","onChangeUsername","onChangeDescription","onChangeDuration","onChangeDate","onSubmit","Date","users","match","params","length","e","target","value","preventDefault","post","location","ref","required","onChange","selected","CreateExercises","CreateUser","onChangeEmail","onChangePassword","onChangePasswordConfirm","email","password","passwordConfirm","noValidate","placeholder","Landing","style","height","width","borderRadius","letterSpacing","Login","userData","App","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.48faad8b.chunk.js","sourcesContent":["import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n  } from \"../actions/types\";\r\n  \r\n  const isEmpty = require(\"is-empty\");\r\n  \r\n  const initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SET_CURRENT_USER:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: !isEmpty(action.payload),\r\n          user: action.payload\r\n        };\r\n      case USER_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case GET_ERRORS:\r\n        return action.payload;\r\n      default:\r\n        return state;\r\n    }\r\n  }","\nimport { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION__COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeEnhancer(\r\n    applyMiddleware(thunk),\r\n  )\r\n);\r\n\r\nexport default store;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Navbar extends Component{\r\n    render (){\r\n        return(\r\n            <nav className =\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n                <Link to=\"/\" className=\"navbar-brand\">ExcerTracker</Link>\r\n                <div className=\"collapse navbar-collapse\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"navbar-item\">\r\n                            <Link to=\"/list\" className=\"nav-link\">Exercises</Link>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <Link to=\"/create\" className=\"nav-link\">Log Exercise</Link>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <Link to=\"/user\" className=\"nav-link\">Create User</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Exercise = props => (\r\n    <tr>\r\n        <td>{props.exercise.username}</td>\r\n        <td>{props.exercise.description}</td>\r\n        <td>{props.exercise.duration}</td>\r\n        <td>{props.exercise.date.substring(0, 10)}</td>\r\n        <td>\r\n            <Link to={\"/edit/\" + props.exercise._id}>Edit</Link> | \r\n            <a href=\"#\" onClick={() => {props.deleteExercises(props.exercise._id) }}>Delete</a>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nexport default class ExercisesList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.deleteExercises = this.deleteExercises.bind(this);\r\n\r\n        this.state={exercises: []};\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(\"http://localhost:5000/exercises/list\")\r\n            .then(response => {\r\n                this.setState({ exercises: response.data})\r\n            })\r\n            .catch((error) =>{\r\n            console.log(error);\r\n            })\r\n    }\r\n\r\n    deleteExercises(id){\r\n        axios.delete(\"http://localhost:5000/exercises/\"+id)\r\n            .then (res => console.log(res.data));\r\n\r\n        this.setState({\r\n            exercises: this.state.exercises.filter(el => el._id !== id)\r\n        })\r\n    }\r\n\r\n    exercisesList(){\r\n        return this.state.exercises.map(currentexercise => {\r\n            return <Exercise exercise={currentexercise} \r\n                    deleteExercises={this.deleteExercises} \r\n                    key={currentexercise._id}/>;\r\n        })\r\n    }\r\n    render (){\r\n        return(\r\n            <div>\r\n                <h3>Logged Exercises</h3>\r\n                <table className=\"table\">\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th>Username</th>\r\n                            <th>Description</th>\r\n                            <th>Duration (in Minutes)</th>\r\n                            <th>Date</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.exercisesList()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default class EditExercises extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangeDescription = this.onChangeDescription.bind(this);\r\n        this.onChangeDuration = this.onChangeDuration.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state= {\r\n            username: '',\r\n            description: '',\r\n            duration: 0,\r\n            date: new Date(),\r\n            users:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('http://localhost:5000/exercises/'+this.props.match.params.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    username: response.data.username,\r\n                    description: response.data.description,\r\n                    duration: response.data.duration,\r\n                    date: new Date(response.data.date),\r\n                })\r\n            })\r\n            .catch(function(error){\r\n                console.log(error);\r\n            })\r\n\r\n        axios.get('http://localhost:5000/users/')\r\n            .then(response => {\r\n                if (response.data.length > 0){\r\n                    this.setState ({\r\n                        users: response.data.map(user => user.username),\r\n                    })\r\n                }\r\n            });\r\n    }\r\n\r\n    onChangeUsername(e){\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n    onChangeDescription(e){\r\n        this.setState({\r\n            description: e.target.value\r\n        });\r\n    }\r\n    onChangeDuration(e){\r\n        this.setState({\r\n            duration: e.target.value\r\n        });\r\n    }\r\n    onChangeDate(date){\r\n        this.setState({\r\n            date: date\r\n        });\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const exercise = {\r\n            username: this.state.username,\r\n            description: this.state.description,\r\n            duration: this.state.duration,\r\n            date: this.state.date\r\n        }\r\n\r\n        console.log(exercise);\r\n\r\n        axios.post('http://localhost:5000/exercises/update/'+ this.props.match.params.id, exercise)\r\n            .then(res => console.log(res.date));\r\n\r\n        window.location = '/';\r\n    }\r\n\r\n    render (){\r\n        return(\r\n            <div>\r\n                <h3>Edit Your Workout</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Username: </label>\r\n                        <select ref='userInput'\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.username}\r\n                            onChange={this.onChangeUsername}>\r\n                                {\r\n                                this.state.users.map(function(user){\r\n                                    return <option \r\n                                    key={user}\r\n                                    value={user}>{user}\r\n                                    </option>\r\n                                })\r\n                                }\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Description</label>\r\n                        <input type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.description}\r\n                            onChange={this.onChangeDescription} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Duration (in minutes)</label>\r\n                        <input type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.duration}\r\n                            onChange={this.onChangeDuration} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Date:</label>\r\n                            <div>\r\n                                <DatePicker\r\n                                    selected={this.state.date}\r\n                                    onChange={this.onChangeDate}>\r\n                                </DatePicker>\r\n                            </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Edit Exercise Log\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default class CreateExercises extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangeDescription = this.onChangeDescription.bind(this);\r\n        this.onChangeDuration = this.onChangeDuration.bind(this);\r\n        this.onChangeDate = this.onChangeDate.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state= {\r\n            username: '',\r\n            description: '',\r\n            duration: 0,\r\n            date: new Date(),\r\n            users:[]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('http://localhost:5000/users/')\r\n            .then(response => {\r\n                if (response.data.length > 0){\r\n                    this.setState ({\r\n                        users: response.data.map(user => user.username),\r\n                        username: response.data[0].username\r\n                    })\r\n                }\r\n            });\r\n    }\r\n\r\n    onChangeUsername(e){\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n    onChangeDescription(e){\r\n        this.setState({\r\n            description: e.target.value\r\n        });\r\n    }\r\n    onChangeDuration(e){\r\n        this.setState({\r\n            duration: e.target.value\r\n        });\r\n    }\r\n    onChangeDate(date){\r\n        this.setState({\r\n            date: date\r\n        });\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const exercise = {\r\n            username: this.state.username,\r\n            description: this.state.description,\r\n            duration: this.state.duration,\r\n            date: this.state.date\r\n        }\r\n\r\n        console.log(exercise);\r\n\r\n        axios.post('http://localhost:5000/exercises/add', exercise)\r\n            .then(res => console.log(res.date));\r\n\r\n        window.location = '/';\r\n    }\r\n\r\n    render (){\r\n        return(\r\n            <div>\r\n                <h3>Log Your Workout</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Username: </label>\r\n                        <select ref='userInput'\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.username}\r\n                            onChange={this.onChangeUsername}>\r\n                                {\r\n                                this.state.users.map(function(user){\r\n                                    return <option \r\n                                    key={user}\r\n                                    value={user}>{user}\r\n                                    </option>\r\n                                })\r\n                                }\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Description</label>\r\n                        <input type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.description}\r\n                            onChange={this.onChangeDescription} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Duration (in minutes)</label>\r\n                        <input type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.duration}\r\n                            onChange={this.onChangeDuration} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Date:</label>\r\n                            <div>\r\n                                <DatePicker\r\n                                    selected={this.state.date}\r\n                                    onChange={this.onChangeDate}>\r\n                                </DatePicker>\r\n                            </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Create Exercise Log\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateUser extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onChangePasswordConfirm = this.onChangePasswordConfirm.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state= {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            passwordConfirm: '',\r\n            errors: {}\r\n        }\r\n    }\r\n    onChangeUsername(e){\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n    onChangeEmail(e){\r\n        this.setState({\r\n            email: e.target.value\r\n        });\r\n    }\r\n    onChangePassword(e){\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n    onChangePasswordConfirm(e){\r\n        this.setState({\r\n            passwordConfirm: e.target.value\r\n        });\r\n    }\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            username: this.state.username,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            passwordConfirm: this.state.passwordConfirm\r\n        }\r\n\r\n        console.log(user);\r\n\r\n        axios.post('http://localhost:5000/users/add', user)\r\n            .then(res => console.log(res.date));\r\n\r\n        this.setState({\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            passwordConfirm: ''\r\n        });\r\n    }\r\n    render (){\r\n        const {errors} = this.state;\r\n        return(\r\n            <div>\r\n                <h3>Create New User</h3>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                <div className =\"form-group\">\r\n                    <label>Username: </label>\r\n                    <input type=\"text\"\r\n                        id=\"username\"\r\n                        required\r\n                        className=\"form=control\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChangeUsername}\r\n                        error={errors.username}\r\n                        />\r\n                    <label>Email: </label>\r\n                    <input type=\"email\"\r\n                        id=\"email\"\r\n                        required\r\n                        className=\"form=control\"\r\n                        value={this.state.email}\r\n                        onChange={this.onChangeEmail}\r\n                        placeholder=\"ex: name@email.com\"\r\n                        error={errors.email}\r\n                        />\r\n                    <label>Password: </label>\r\n                    <input type=\"password\"\r\n                        id=\"password\"\r\n                        required\r\n                        className=\"form=control\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChangePassword}\r\n                        error={errors.password}\r\n                        />\r\n                    <label>Confirm Password: </label>\r\n                    <input type=\"password\"\r\n                        id=\"passwordConfirm\"\r\n                        required\r\n                        className=\"form=control\"\r\n                        value={this.state.passwordConfirm}\r\n                        onChange={this.onChangePasswordConfirm}\r\n                        error={errors.password}\r\n                        />           \r\n\r\n                </div>\r\n            <div className=\"form-group\">\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Create User\" />\r\n            </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Landing extends Component{\r\n    render (){\r\n        return(\r\n        <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n            <div className=\"row\">\r\n            <div className=\"col s6\">\r\n              <Link\r\n                to=\"/user\"\r\n                style={{\r\n                  width: \"140px\",\r\n                  borderRadius: \"3px\",\r\n                  letterSpacing: \"1.5px\"\r\n                }}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Register\r\n              </Link>\r\n            </div>\r\n            <div className=\"col s6\">\r\n              <Link\r\n                to=\"/login\"\r\n                style={{\r\n                  width: \"140px\",\r\n                  borderRadius: \"3px\",\r\n                  letterSpacing: \"1.5px\"\r\n                }}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Log In\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n        this.state= {\r\n            email: '',\r\n            password: '',\r\n            errors: {}\r\n        }\r\n    }\r\n    onChange(e){\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n        }\r\n\r\n        this.setState({\r\n            email: '',\r\n            password: ''\r\n        });\r\n\r\n        console.log(userData);\r\n    }\r\n    render(){\r\n        const {errors} = this.state;\r\n    return(\r\n        <div>\r\n            <h3>Login</h3>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                <div className =\"form-group\">\r\n                    <label>Email: </label>\r\n                    <input type=\"email\"\r\n                        id=\"email\"\r\n                        required\r\n                        className=\"form=control\"\r\n                        value={this.state.email}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"ex: name@email.com\"\r\n                        errors={errors.email}\r\n                        />\r\n                    <label>Password: </label>\r\n                    <input type=\"password\"\r\n                        id=\"password\"\r\n                        required\r\n                        className=\"form=control\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChange}\r\n                        errors={errors.password}\r\n                        />       \r\n\r\n                </div>\r\n                <p className=\"grey-text text-darken-1\">Don't have an account? <Link to=\"/user\">Register</Link></p>\r\n            <div className=\"form-group\">\r\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n            </div>\r\n                </form>\r\n        </div>\r\n\r\n    );\r\n}\r\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//import logo from './logo.svg';\nimport './App.css';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/navbar.component\";\nimport ExercisesList from \"./components/exercises-list.component\";\nimport EditExercises from \"./components/edit-exercises.component\";\nimport CreateExercises from \"./components/create-exercises.component\";\nimport CreateUser from \"./components/create-user.component\";\nimport Landing from \"./components/landing.component\";\nimport Login from \"./components/login.component\";\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <Router>\n      <div className=\"container\">\n        <Navbar />\n        <br/>\n        <Route path=\"/\" exact component={Landing}/>\n        <Route path=\"/list\" exact component={ExercisesList}/>\n        <Route path=\"/edit/:id\" exact component={EditExercises}/>\n        <Route path=\"/create\" exact component={CreateExercises}/>\n        <Route path=\"/user\" exact component={CreateUser}/>\n        <Route path=\"/login\" exact component={Login}/>\n      </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { combineReducers } from \"redux\";\nimport authReducer from \"./reducers/authReducers\";\nimport errorReducer from \"./reducers/errorReducers\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}