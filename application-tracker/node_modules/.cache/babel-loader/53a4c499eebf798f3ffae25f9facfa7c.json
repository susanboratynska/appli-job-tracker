{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/WebProject/project-and-learning-documentations-dreamteam/application-tracker/src/components/contacts/update-contact.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Validator from \"validator\";\nimport helpers from \"../../functions/susan-helperfunctions\";\nconst initialState = {\n  contact_firstname: '',\n  contact_lastname: '',\n  contact_linkedin: '',\n  contact_email: '',\n  contact_phone: '',\n  contact_company: '',\n  contact_jobtitle: '',\n  contact_datemet: '',\n  contact_notes: '',\n  firstnameError: '',\n  lastnameError: '',\n  linkedinError: '',\n  emailError: '',\n  phoneError: '',\n  companyError: '',\n  jobtitleError: '',\n  datemetError: ''\n};\nexport default class UpdateContactComponent extends Component {\n  // Take a constructor and pass in props from the component:\n  constructor(props) {\n    // Taking the parent constructor and passing in props:\n    super(props);\n\n    this.validateForm = () => {\n      let firstnameError = '';\n      let lastnameError = '';\n      let linkedinError = '';\n      let emailError = '';\n      let phoneError = '';\n      let companyError = '';\n      let jobtitleError = '';\n      let datemetError = ''; // ----- Name Validation ----- //\n\n      if (Validator.isEmpty(this.state.contact_firstname)) {\n        firstnameError = 'Please enter a first name';\n      }\n\n      if (firstnameError) {\n        this.setState({\n          firstnameError\n        });\n      }\n\n      if (Validator.isEmpty(this.state.contact_lastname)) {\n        lastnameError = 'Please enter a last name';\n      }\n\n      if (lastnameError) {\n        this.setState({\n          lastnameError\n        });\n      } // ----- URL Validation ----- //\n\n\n      if (this.state.contact_linkedin && !Validator.isURL(this.state.contact_linkedin, {\n        protocols: ['http', 'https'],\n        require_protocol: true\n      })) {\n        linkedinError = 'Please enter a valid URL starting with https';\n      }\n\n      if (linkedinError) {\n        this.setState({\n          linkedinError\n        });\n      } // ----- Email Validation ----- //\n\n\n      if (this.state.contact_email && !Validator.isEmail(this.state.contact_email)) {\n        emailError = 'Please enter a valid e-mail';\n      }\n\n      if (emailError) {\n        this.setState({\n          emailError\n        });\n      } // ----- Phone Validation ----- //\n\n\n      if (this.state.contact_phone && !Validator.isMobilePhone(this.state.contact_phone)) {\n        phoneError = 'Please enter a valid phone number';\n      }\n\n      if (phoneError) {\n        this.setState({\n          phoneError\n        });\n      } // ----- Company Validation ----- //\n\n\n      if (Validator.isEmpty(this.state.contact_company)) {\n        companyError = 'Please enter a company';\n      }\n\n      if (companyError) {\n        this.setState({\n          companyError\n        });\n      } // ----- Job Title Validation ----- //\n\n\n      if (Validator.isEmpty(this.state.contact_jobtitle)) {\n        jobtitleError = 'Please enter a job title';\n      }\n\n      if (jobtitleError) {\n        this.setState({\n          jobtitleError\n        });\n      } // ----- When We Met Validation ----- //\n\n\n      console.log(this.state.contact_datemet);\n\n      if (this.state.contact_datemet && !Validator.isDate(this.state.contact_datemet)) {\n        datemetError = 'Please enter a date using the following format: yyyy-mm-dd';\n      }\n\n      if (datemetError) {\n        this.setState({\n          datemetError\n        });\n      }\n\n      if (firstnameError || lastnameError || linkedinError || emailError || phoneError || companyError || jobtitleError || datemetError) {\n        return false;\n      }\n\n      return true;\n    };\n\n    this.onChangeContact_FirstName = this.onChangeContact_FirstName.bind(this);\n    this.onChangeContact_LastName = this.onChangeContact_LastName.bind(this);\n    this.onChangeContact_LinkedIn = this.onChangeContact_LinkedIn.bind(this);\n    this.onChangeContact_Email = this.onChangeContact_Email.bind(this);\n    this.onChangeContact_Phone = this.onChangeContact_Phone.bind(this);\n    this.onChangeContact_Company = this.onChangeContact_Company.bind(this);\n    this.onChangeContact_JobTitle = this.onChangeContact_JobTitle.bind(this);\n    this.onChangeContact_DateMet = this.onChangeContact_DateMet.bind(this);\n    this.onChangeContact_Notes = this.onChangeContact_Notes.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/appli-job-app-tracker/contacts/' + this.props.match.params.id).then(response => {\n      this.setState({\n        contact_firstname: response.data.contact_firstname,\n        contact_lastname: response.data.contact_lastname,\n        contact_linkedin: response.data.contact_linkedin,\n        contact_email: response.data.contact_email,\n        contact_phone: response.data.contact_phone,\n        contact_company: response.data.contact_company,\n        contact_jobtitle: response.data.contact_jobtitle,\n        contact_datemet: helpers.formatDateNumber(response.data.contact_datemet),\n        contact_notes: response.data.contact_notes\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  onChangeContact_FirstName(e) {\n    this.setState({\n      contact_firstname: e.target.value,\n      firstnameError: ''\n    });\n  }\n\n  onChangeContact_LastName(e) {\n    this.setState({\n      contact_lastname: e.target.value,\n      lastnameError: ''\n    });\n  }\n\n  onChangeContact_LinkedIn(e) {\n    this.setState({\n      contact_linkedin: e.target.value,\n      linkedinError: ''\n    });\n  }\n\n  onChangeContact_Email(e) {\n    this.setState({\n      contact_email: e.target.value,\n      emailError: ''\n    });\n  }\n\n  onChangeContact_Phone(e) {\n    this.setState({\n      contact_phone: e.target.value,\n      phoneError: ''\n    });\n  }\n\n  onChangeContact_Company(e) {\n    this.setState({\n      contact_company: e.target.value,\n      companyError: ''\n    });\n  }\n\n  onChangeContact_JobTitle(e) {\n    this.setState({\n      contact_jobtitle: e.target.value,\n      jobtitleError: ''\n    });\n  }\n\n  onChangeContact_DateMet(e) {\n    this.setState({\n      contact_datemet: e.target.value,\n      datemetError: ''\n    });\n  }\n\n  onChangeContact_Notes(e) {\n    this.setState({\n      contact_notes: e.target.value\n    });\n  } // ----- Function Validate Form ----- //\n\n\n  onSubmit(e) {\n    e.preventDefault();\n    const isValid = this.validateForm();\n\n    if (!isValid) {\n      return false;\n    }\n\n    const obj = {\n      contact_firstname: this.state.contact_firstname,\n      contact_lastname: this.state.contact_lastname,\n      contact_linkedin: this.state.contact_linkedin,\n      contact_email: this.state.contact_email,\n      contact_phone: this.state.contact_phone,\n      contact_company: this.state.contact_company,\n      contact_jobtitle: this.state.contact_jobtitle,\n      contact_datemet: this.state.contact_datemet,\n      contact_notes: this.state.contact_notes\n    };\n    console.log(obj);\n    axios.post('http://localhost:4000/appli-job-app-tracker/contacts/update/' + this.props.match.params.id, obj).then(res => console.log(res.data)); // History is library from React Router, it keeps track of session history for React Router\n    // When a component is rendered By React Router, that component is passed 3 props: location, match, and history\n    // history.push pushes a new entry into the history stack which redirects users to another route\n\n    this.props.history.push('/contacts');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contentcontainer\",\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    }, \"Update Contact\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/contacts\",\n      className: \"btn btn-outline-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }\n    }, \"Back to List\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-sm-6 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 33\n      }\n    }, \"Contact Name: \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form__required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 91\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col_margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"First Name\",\n      className: \"form-control \" + helpers.appendErrorClass(this.state, 'firstnameError'),\n      value: this.state.contact_firstname,\n      onChange: this.onChangeContact_FirstName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-error-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 37\n      }\n    }, this.state.firstnameError)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col_margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Last Name\",\n      className: \"form-control col margin-left__10px \" + helpers.appendErrorClass(this.state, 'lastnameError'),\n      value: this.state.contact_lastname,\n      onChange: this.onChangeContact_LastName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col text-error-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 37\n      }\n    }, this.state.lastnameError))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-sm-6 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 33\n      }\n    }, \"LinkedIn Profile: \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col_margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control \" + helpers.appendErrorClass(this.state, 'linkedinError'),\n      value: this.state.contact_linkedin,\n      onChange: this.onChangeContact_LinkedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-error-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 37\n      }\n    }, this.state.linkedinError))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-sm-6 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 33\n      }\n    }, \"Email: \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col_margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control \" + helpers.appendErrorClass(this.state, 'emailError'),\n      value: this.state.contact_email,\n      onChange: this.onChangeContact_Email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-error-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 37\n      }\n    }, this.state.emailError))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-sm-6 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 33\n      }\n    }, \"Phone: \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col_margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"xxx-xxx-xxxx\",\n      className: \"form-control \" + helpers.appendErrorClass(this.state, 'phoneError'),\n      value: this.state.contact_phone,\n      onChange: this.onChangeContact_Phone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-error-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 37\n      }\n    }, this.state.phoneError))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-sm-6 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 33\n      }\n    }, \"Company: \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form__required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 86\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col_margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control \" + helpers.appendErrorClass(this.state, 'companyError'),\n      value: this.state.contact_company,\n      onChange: this.onChangeContact_Company,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-error-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 37\n      }\n    }, this.state.companyError))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-sm-6 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 33\n      }\n    }, \"Job Title: \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"form__required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 88\n      }\n    }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col_margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control \" + helpers.appendErrorClass(this.state, 'jobtitleError'),\n      value: this.state.contact_jobtitle,\n      onChange: this.onChangeContact_JobTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-error-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 37\n      }\n    }, this.state.jobtitleError))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-sm-6 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 33\n      }\n    }, \"When we met: \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col col_margin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      placeholder: \"yyyy-mm-dd\",\n      className: \"form-control \" + helpers.appendErrorClass(this.state, 'datemetError'),\n      value: this.state.contact_datemet,\n      onChange: this.onChangeContact_DateMet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-error-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 37\n      }\n    }, this.state.datemetError))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-sm-6 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 33\n      }\n    }, \"Notes: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"textarea\",\n      className: \"form-control col-sm-6\",\n      value: this.state.contact_notes,\n      onChange: this.onChangeContact_Notes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row submit__rightalign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Update Contact\",\n      className: \"btn btn-outline-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 33\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/WebProject/project-and-learning-documentations-dreamteam/application-tracker/src/components/contacts/update-contact.component.js"],"names":["React","Component","axios","Validator","helpers","initialState","contact_firstname","contact_lastname","contact_linkedin","contact_email","contact_phone","contact_company","contact_jobtitle","contact_datemet","contact_notes","firstnameError","lastnameError","linkedinError","emailError","phoneError","companyError","jobtitleError","datemetError","UpdateContactComponent","constructor","props","validateForm","isEmpty","state","setState","isURL","protocols","require_protocol","isEmail","isMobilePhone","console","log","isDate","onChangeContact_FirstName","bind","onChangeContact_LastName","onChangeContact_LinkedIn","onChangeContact_Email","onChangeContact_Phone","onChangeContact_Company","onChangeContact_JobTitle","onChangeContact_DateMet","onChangeContact_Notes","onSubmit","componentDidMount","get","match","params","id","then","response","data","formatDateNumber","catch","error","e","target","value","preventDefault","isValid","obj","post","res","history","push","render","marginTop","appendErrorClass"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Validator from \"validator\";\nimport helpers from \"../../functions/susan-helperfunctions\";\n\nconst initialState = {\n    contact_firstname: '',\n    contact_lastname: '',\n    contact_linkedin: '',\n    contact_email: '',\n    contact_phone: '',\n    contact_company: '',\n    contact_jobtitle: '',\n    contact_datemet: '',\n    contact_notes: '',\n    firstnameError: '',\n    lastnameError: '',\n    linkedinError: '',\n    emailError: '',\n    phoneError: '',\n    companyError: '',\n    jobtitleError: '',\n    datemetError: ''\n}\n\nexport default class UpdateContactComponent extends Component {\n    // Take a constructor and pass in props from the component:\n    constructor(props) {\n        // Taking the parent constructor and passing in props:\n        super(props);\n\n        this.onChangeContact_FirstName = this.onChangeContact_FirstName.bind(this);\n        this.onChangeContact_LastName = this.onChangeContact_LastName.bind(this);\n        this.onChangeContact_LinkedIn = this.onChangeContact_LinkedIn.bind(this);\n        this.onChangeContact_Email = this.onChangeContact_Email.bind(this);\n        this.onChangeContact_Phone = this.onChangeContact_Phone.bind(this);\n        this.onChangeContact_Company = this.onChangeContact_Company.bind(this);\n        this.onChangeContact_JobTitle = this.onChangeContact_JobTitle.bind(this);\n        this.onChangeContact_DateMet = this.onChangeContact_DateMet.bind(this);\n        this.onChangeContact_Notes = this.onChangeContact_Notes.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = initialState;\n\n    }\n\n    componentDidMount(){\n        axios.get('http://localhost:4000/appli-job-app-tracker/contacts/' + this.props.match.params.id)\n            .then(response => {\n                this.setState({\n                    contact_firstname: response.data.contact_firstname,\n                    contact_lastname: response.data.contact_lastname,\n                    contact_linkedin: response.data.contact_linkedin,\n                    contact_email: response.data.contact_email,\n                    contact_phone: response.data.contact_phone,\n                    contact_company: response.data.contact_company,\n                    contact_jobtitle: response.data.contact_jobtitle,\n                    contact_datemet: helpers.formatDateNumber(response.data.contact_datemet),\n                    contact_notes: response.data.contact_notes,\n                })\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n    onChangeContact_FirstName(e) {\n        this.setState({\n            contact_firstname: e.target.value,\n            firstnameError: ''\n        });\n    }\n\n    onChangeContact_LastName(e) {\n        this.setState({\n            contact_lastname: e.target.value,\n            lastnameError:''\n        });\n    }\n\n    onChangeContact_LinkedIn(e) {\n        this.setState({\n            contact_linkedin: e.target.value,\n            linkedinError: ''\n        });\n    }\n\n    onChangeContact_Email(e) {\n        this.setState({\n            contact_email: e.target.value,\n            emailError: ''\n        });\n    }\n\n    onChangeContact_Phone(e) {\n        this.setState({\n            contact_phone: e.target.value,\n            phoneError: ''\n        });\n    }\n\n    onChangeContact_Company(e) {\n        this.setState({\n            contact_company: e.target.value,\n            companyError: ''\n        });\n    }\n\n    onChangeContact_JobTitle(e) {\n        this.setState({\n            contact_jobtitle: e.target.value,\n            jobtitleError: ''\n        });\n    }\n\n    onChangeContact_DateMet(e) {\n        this.setState({\n            contact_datemet: e.target.value,\n            datemetError: ''\n        });\n    }\n\n    onChangeContact_Notes(e) {\n        this.setState({\n            contact_notes: e.target.value\n        });\n    }\n\n    // ----- Function Validate Form ----- //\n    validateForm = () => {\n        let firstnameError = '';\n        let lastnameError = '';\n        let linkedinError = '';\n        let emailError = '';\n        let phoneError = '';\n        let companyError = '';\n        let jobtitleError = '';\n        let datemetError = '';\n\n\n\n        // ----- Name Validation ----- //\n        if (Validator.isEmpty(this.state.contact_firstname)){\n            firstnameError = 'Please enter a first name';\n        }\n\n        if (firstnameError){\n            this.setState({firstnameError});\n        }\n\n        if (Validator.isEmpty(this.state.contact_lastname)){\n            lastnameError = 'Please enter a last name';\n        }\n\n        if (lastnameError){\n            this.setState({lastnameError});\n        }\n\n        // ----- URL Validation ----- //\n        if (this.state.contact_linkedin && !Validator.isURL(this.state.contact_linkedin, {protocols: ['http','https'], require_protocol: true})) {\n            linkedinError = 'Please enter a valid URL starting with https';\n        }\n\n        if (linkedinError) {\n            this.setState({linkedinError});\n        }\n\n        // ----- Email Validation ----- //\n        if ( this.state.contact_email && !Validator.isEmail(this.state.contact_email)){\n            emailError = 'Please enter a valid e-mail';\n        }\n\n        if (emailError) {\n            this.setState({emailError});\n        }\n\n        // ----- Phone Validation ----- //\n        if (this.state.contact_phone && !Validator.isMobilePhone(this.state.contact_phone)){\n            phoneError = 'Please enter a valid phone number';\n        }\n\n        if (phoneError){\n            this.setState({phoneError});\n        }\n\n        // ----- Company Validation ----- //\n        if (Validator.isEmpty(this.state.contact_company)){\n            companyError = 'Please enter a company';\n        }\n\n        if (companyError){\n            this.setState({companyError});\n        }\n\n        // ----- Job Title Validation ----- //\n\n        if (Validator.isEmpty(this.state.contact_jobtitle)){\n            jobtitleError = 'Please enter a job title';\n        }\n\n        if (jobtitleError) {\n            this.setState({jobtitleError})\n        }\n\n        // ----- When We Met Validation ----- //\n        console.log(this.state.contact_datemet);\n        if ( this.state.contact_datemet && !Validator.isDate(this.state.contact_datemet)){\n            datemetError = 'Please enter a date using the following format: yyyy-mm-dd';\n        }\n\n        if (datemetError) {\n            this.setState({datemetError});\n        }\n\n\n        if (firstnameError || lastnameError || linkedinError || emailError || phoneError || companyError || jobtitleError || datemetError) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const isValid = this.validateForm();\n        if (!isValid) {\n            return false;\n        }\n\n\n        const obj = {\n            contact_firstname: this.state.contact_firstname,\n            contact_lastname: this.state.contact_lastname,\n            contact_linkedin: this.state.contact_linkedin,\n            contact_email: this.state.contact_email,\n            contact_phone: this.state.contact_phone,\n            contact_company: this.state.contact_company,\n            contact_jobtitle: this.state.contact_jobtitle,\n            contact_datemet: this.state.contact_datemet,\n            contact_notes: this.state.contact_notes\n        };\n        console.log(obj);\n        axios.post('http://localhost:4000/appli-job-app-tracker/contacts/update/' + this.props.match.params.id, obj)\n            .then(res => console.log(res.data));\n\n        // History is library from React Router, it keeps track of session history for React Router\n        // When a component is rendered By React Router, that component is passed 3 props: location, match, and history\n        // history.push pushes a new entry into the history stack which redirects users to another route\n        this.props.history.push('/contacts');\n    }\n\n\n\n\n\n    render() {\n        return (\n            <div className=\"contentcontainer\" style={{marginTop: 10}}>\n                <h1>Update Contact</h1>\n                    <a href='/contacts' className='btn btn-outline-dark'>Back to List</a>\n                    <div>\n                        <form onSubmit={this.onSubmit} >\n                            <div className=\"form-group row\">\n                                <label className=\"col-sm-6 col-form-label\" >Contact Name: <span className=\"form__required\">*</span></label >\n                                <div className=\"col col_margin\">\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"First Name\"\n                                        className= {\"form-control \" + helpers.appendErrorClass(this.state,'firstnameError') }\n                                        value={this.state.contact_firstname}\n                                        onChange={this.onChangeContact_FirstName}\n                                    />\n                                    <div className='col text-error-display'>{this.state.firstnameError}</div>\n                                </div>\n\n                                <div className=\"col col_margin\">\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"Last Name\"\n                                        className= {\"form-control col margin-left__10px \" + helpers.appendErrorClass(this.state,'lastnameError') }\n                                        value={this.state.contact_lastname}\n                                        onChange={this.onChangeContact_LastName}\n                                    />\n                                    <div className='col text-error-display'>{this.state.lastnameError}</div>\n                                </div>\n                            </div>\n\n                            <div className=\"form-group row\">\n                                <label className=\"col-sm-6 col-form-label\" >LinkedIn Profile: </label >\n                                <div className=\"col col_margin\">\n                                    <input\n                                        type=\"text\"\n                                        className= {\"form-control \" + helpers.appendErrorClass(this.state,'linkedinError') }\n                                        value={this.state.contact_linkedin}\n                                        onChange={this.onChangeContact_LinkedIn}\n                                    />\n                                    <div className='text-error-display'>{this.state.linkedinError}</div>\n                                </div>\n                            </div>\n\n                            <div className=\"form-group row\">\n                                <label className=\"col-sm-6 col-form-label\" >Email: </label >\n                                <div className=\"col col_margin\">\n                                    <input\n                                        type=\"text\"\n                                        className={\"form-control \" + helpers.appendErrorClass(this.state,'emailError') }\n                                        value={this.state.contact_email}\n                                        onChange={this.onChangeContact_Email}\n                                    />\n                                    <div className='text-error-display'>{this.state.emailError}</div>\n                                </div>\n                            </div>\n\n                            <div className=\"form-group row\">\n                                <label className=\"col-sm-6 col-form-label\" >Phone: </label >\n                                <div className=\"col col_margin\">\n                                    <input\n                                        type=\"text\"\n                                        placeholder=\"xxx-xxx-xxxx\"\n                                        className= {\"form-control \" + helpers.appendErrorClass(this.state,'phoneError') }\n                                        value={this.state.contact_phone}\n                                        onChange={this.onChangeContact_Phone}\n                                    />\n                                    <div className='text-error-display'>{this.state.phoneError}</div>\n                                </div>\n                            </div>\n\n                            <div className=\"form-group row\">\n                                <label className=\"col-sm-6 col-form-label\" >Company: <span className=\"form__required\">*</span></label >\n                                <div className=\"col col_margin\">\n                                    <input\n                                        type=\"text\"\n                                        className={\"form-control \" + helpers.appendErrorClass(this.state,'companyError') }\n                                        value={this.state.contact_company}\n                                        onChange={this.onChangeContact_Company}\n                                    />\n                                    <div className='text-error-display'>{this.state.companyError}</div>\n                                </div>\n                            </div>\n\n                            <div className=\"form-group row\">\n                                <label className=\"col-sm-6 col-form-label\" >Job Title: <span className=\"form__required\">*</span></label >\n                                <div className=\"col col_margin\">\n                                    <input\n                                        type=\"text\"\n                                        className={\"form-control \" + helpers.appendErrorClass(this.state,'jobtitleError') }\n                                        value={this.state.contact_jobtitle}\n                                        onChange={this.onChangeContact_JobTitle}\n                                    />\n                                    <div className='text-error-display'>{this.state.jobtitleError}</div>\n                                </div>\n                            </div>\n\n                            <div className=\"form-group row\">\n                                <label className=\"col-sm-6 col-form-label\" >When we met: </label >\n                                <div className=\"col col_margin\">\n                                    <input\n                                        type=\"date\"\n                                        placeholder=\"yyyy-mm-dd\"\n                                        className={\"form-control \" + helpers.appendErrorClass(this.state,'datemetError') }\n                                        value={ this.state.contact_datemet }\n                                        onChange={this.onChangeContact_DateMet}\n                                    />\n                                    <div className='text-error-display'>{this.state.datemetError}</div>\n                                </div>\n                            </div>\n\n\n                            <div className=\"form-group row\">\n                                <label className=\"col-sm-6 col-form-label\" >Notes: </label >\n                                <textarea\n                                    type=\"textarea\"\n                                    className=\"form-control col-sm-6\"\n                                    value={this.state.contact_notes}\n                                    onChange={this.onChangeContact_Notes}\n                                />\n                            </div>\n\n\n                            <div className=\"form-group row submit__rightalign\">\n                                <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-outline-primary\" />\n                            </div>\n\n                        </form>\n                    </div>\n                </div>\n            )\n        }\n}\n"]},"metadata":{},"sourceType":"module"}