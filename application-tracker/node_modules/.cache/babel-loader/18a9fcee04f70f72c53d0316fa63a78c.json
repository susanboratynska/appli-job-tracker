{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/WebProject/project-and-learning-documentations-dreamteam/application-tracker/src/components/networking-events/list-networking.component.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport location from \"../../images/icons/location.svg\";\nimport user from \"../../images/icons/user.svg\";\nimport plusbutton from \"../../images/icons/plus.svg\";\n\nconst Networking = props => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"event\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"event__date\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }\n}, formatDate(props.networking.event_date)), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"event__info\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: \"event__title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 17\n  }\n}, \" \", props.networking.event_title, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"event__details tooltip-toggle\",\n  \"data-tooltip\": \"Location\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: location,\n  className: \"event__icons\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"display__inlineblock\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 17\n  }\n}, \" \", props.networking.event_location)), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"event__details tooltip-toggle\",\n  \"data-tooltip\": \"Event Host\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: user,\n  className: \"event__icons\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"display__inlineblock\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 17\n  }\n}, props.networking.event_host)), /*#__PURE__*/React.createElement(\"a\", {\n  href: '/networking-events/update/' + props.networking._id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: plusbutton,\n  className: \"event__morebtn\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 75\n  }\n})))); // ---------- Functions ---------- //\n\n\nfunction formatDate(string) {\n  // Trick to get the correct date since it's giving the date back one day off:\n  // SRC: https://stackoverflow.com/questions/7556591/is-the-javascript-date-object-always-one-day-off\n  string = new Date(string.replace(/-/g, '\\/').replace(/T.+/, ''));\n  var options = {\n    month: 'short',\n    day: 'numeric'\n  };\n  return new Date(string).toLocaleDateString([], options);\n}\n\nexport default class ListNetworkingComponent extends Component {\n  // Take a constructor and pass in props from the component:\n  constructor(props) {\n    // Taking the parent constructor and passing in props:\n    super(props); // Set initial state object to contain a property of networking events:\n    // And that property is initially containing an empty array:\n\n    this.state = {\n      networking: []\n    };\n  } // Need ot initialize the networking state property here with the networking\n  // need to find a way to initially send request to teh backend, to get the response\n  // back a list of networking items to set the state property accordingly\n\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/appli-job-app-tracker/networking').then(response => {\n      this.setState({\n        networking: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // Create eventList method:\n\n\n  eventList() {\n    // Iterate over elements\n    // map callback function gets all items\n    return this.state.networking.map(function (currentNetwork, i) {\n      return /*#__PURE__*/React.createElement(Networking, {\n        networking: currentNetwork,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 20\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contentcontainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Networking Events\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page__nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/networking-events/add\",\n      className: \"btn btn-outline-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \"Add New Networking Event\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"jobapplist_search\",\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"search__bar\",\n      id: \"jobapplist_search\",\n      type: \"text\",\n      placeholder: \"Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"event__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, this.eventList()));\n  }\n\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/WebProject/project-and-learning-documentations-dreamteam/application-tracker/src/components/networking-events/list-networking.component.js"],"names":["React","Component","Link","axios","Networking","props","formatDate","networking","event_date","event_title","location","event_location","user","event_host","_id","plusbutton","string","Date","replace","options","month","day","toLocaleDateString","ListNetworkingComponent","constructor","state","componentDidMount","get","then","response","setState","data","catch","error","console","log","eventList","map","currentNetwork","i","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n\nimport location from \"../../images/icons/location.svg\";\nimport user from \"../../images/icons/user.svg\";\nimport plusbutton from \"../../images/icons/plus.svg\";\n\n\nconst Networking = props => (\n    <div className='event'>\n        <div className=\"event__date\">\n            { formatDate(props.networking.event_date) }\n        </div>\n        <div className='event__info'>\n            <h2><span className='event__title'> { props.networking.event_title } </span></h2>\n            <div className='event__details tooltip-toggle' data-tooltip='Location'>\n                <img src={ location } className='event__icons' />\n                <p className=\"display__inlineblock\"> { props.networking.event_location }</p>\n            </div>\n            <div className='event__details tooltip-toggle' data-tooltip='Event Host'>\n                <img src={ user }  className='event__icons'/>\n                <p className=\"display__inlineblock\">{ props.networking.event_host }</p>\n            </div>\n            <a href={'/networking-events/update/' + props.networking._id}><img src={plusbutton} className='event__morebtn'/></a>\n        </div>\n    </div>\n)\n\n// ---------- Functions ---------- //\nfunction formatDate(string){\n    // Trick to get the correct date since it's giving the date back one day off:\n    // SRC: https://stackoverflow.com/questions/7556591/is-the-javascript-date-object-always-one-day-off\n    string = new Date(string.replace(/-/g, '\\/').replace(/T.+/, ''));\n    var options = { month: 'short', day: 'numeric' };\n    return new Date(string).toLocaleDateString([],options);\n}\n\nexport default class ListNetworkingComponent extends Component {\n\n    // Take a constructor and pass in props from the component:\n    constructor(props) {\n        // Taking the parent constructor and passing in props:\n        super(props);\n        // Set initial state object to contain a property of networking events:\n        // And that property is initially containing an empty array:\n        this.state = {networking: []};\n    }\n\n    // Need ot initialize the networking state property here with the networking\n    // need to find a way to initially send request to teh backend, to get the response\n    // back a list of networking items to set the state property accordingly\n    componentDidMount(){\n        axios.get('http://localhost:4000/appli-job-app-tracker/networking')\n            .then(response => {\n                this.setState({networking: response.data})\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n    // Create eventList method:\n    eventList() {\n        // Iterate over elements\n        // map callback function gets all items\n        return this.state.networking.map(function(currentNetwork, i) {\n            return <Networking networking={currentNetwork} key={i} />;\n        })\n    }\n\n\n    render() {\n        return (\n            <div className=\"contentcontainer\">\n                <h1>Networking Events</h1>\n                <div className=\"page__nav\">\n                    <a href='/networking-events/add' className='btn btn-outline-primary'>Add New Networking Event</a>\n                    <form>\n                        <label for=\"jobapplist_search\" hidden>Search</label>\n                        <input className=\"search__bar\" id=\"jobapplist_search\" type=\"text\" placeholder=\"Search\" ></input>\n                    </form>\n                </div>\n                <div className='event__container'>\n                        { this.eventList() }\n                    </div>\n            </div>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}