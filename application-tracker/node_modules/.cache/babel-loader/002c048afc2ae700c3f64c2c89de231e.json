{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/WebProject/project-and-learning-documentations-dreamteam/application-tracker/src/components/calendar/calendar.component.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport helpers from \"../../functions/susan-helperfunctions\";\n\nclass CalendarDay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dateValue: props.dateValue,\n      value: props.value,\n      getData: props.getData,\n      events: [],\n      showEvent: props.showEvent === undefined ? false : props.showEvent,\n      calendar: props.calendar\n    };\n  }\n\n  componentDidMount() {\n    //Here we will grab the data from the database using Axios\n    //this.state.value = 1;\n    //Must have some way to get on a specific day using the dateValue\n    if (this.state.showEvent) {\n      //Convert the Date to the same timezone and time in the database\n      var dateTime = this.state.dateValue;\n      dateTime.toUTCString();\n      dateTime.setHours(20); //console.log(dateTime);\n      //Make multiple request for the Job Applications and Networking\n\n      Promise.all([axios.get('http://localhost:4000/appli-job-app-tracker/jobapps?date=' + dateTime), axios.get('http://localhost:4000/appli-job-app-tracker/networking?date=' + dateTime)]).then(([response1, response2]) => {\n        var events = []; //Loop through all the data in the Job Applications\n\n        for (var i = 0; i < response1.data.length; i++) {\n          events.push({\n            id: response1.data[i]._id,\n            name: response1.data[i].jobapp_title,\n            type: \"Apply\",\n            location: response1.data[i].jobapp_companyname,\n            link: \"/jobapp/show/\" + response1.data[i]._id\n          });\n        } //Loop through all the data in the Networking\n\n\n        for (var i = 0; i < response2.data.length; i++) {\n          events.push({\n            id: response2.data[i]._id,\n            name: response2.data[i].event_title,\n            type: \"Network\",\n            location: response2.data[i].event_location,\n            link: \"/networking-events/details/\" + response2.data[i]._id\n          });\n        } //Set the event data to the events\n\n\n        this.setState({\n          events: events\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } //if we showing the events in the Calendar Month View\n    else {\n        //Convert the Date to the same timezone and time in the database\n        var dateTime = this.state.dateValue;\n        dateTime.toUTCString();\n        dateTime.setHours(20); //console.log(dateTime);\n        //Make multiple request for the Job Applications and Networking\n\n        Promise.all([axios.get('http://localhost:4000/appli-job-app-tracker/jobapps?date=' + dateTime), axios.get('http://localhost:4000/appli-job-app-tracker/networking?date=' + dateTime)]).then(([response1, response2]) => {\n          var events = []; //Loop through all the data in the Job Applications\n\n          for (var i = 0; i < response1.data.length; i++) {\n            events.push({\n              id: response1.data[i]._id,\n              name: response1.data[i].jobapp_title,\n              type: \"Apply\",\n              location: response1.data[i].jobapp_companyname,\n              link: \"/jobapp/show/\" + response1.data[i]._id\n            });\n          } //Loop through all the data in the Networking\n\n\n          for (var i = 0; i < response2.data.length; i++) {\n            events.push({\n              id: response2.data[i]._id,\n              name: response2.data[i].event_title,\n              type: \"Network\",\n              location: response2.data[i].event_location,\n              link: \"/networking-events/details/\" + response2.data[i]._id\n            });\n          } //Set the event data to the events\n\n\n          this.setState({\n            events: events\n          });\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n  } //Function that checks if the (eventName or eventLocation) and the eventType passes the filter condition\n  //Return: bool\n  //true: if the condition is meet\n  //false: otherwise\n  //Param:\n  //eventName: The name of the event\n  //eventType: The type of the event (Apply, Interview, Network)\n  //eventLocation: The location of the event\n\n\n  checkEventPassFilter(eventName, eventType, eventLocation) {\n    if (!eventName.toLowerCase().includes(this.state.calendar.state.filterText.toLowerCase()) && !eventLocation.toLowerCase().includes(this.state.calendar.state.filterText.toLowerCase())) {\n      return false;\n    }\n\n    if (this.state.calendar.state.filterEventType === \"\") {\n      return true;\n    } else if (!(eventType === this.state.calendar.state.filterEventType)) {\n      return false;\n    }\n\n    return true;\n  } //Function that will notify that the calendar must show the events of a paticular day\n\n\n  showDay() {\n    this.setState({\n      showEvent: true\n    });\n    this.state.calendar.setState({\n      day: this.state.value,\n      dayComponent: this,\n      mode: \"day\"\n    });\n  }\n\n  render() {\n    const events = []; //Showing the day on the calendar\n\n    if (this.state.showEvent) {\n      for (let index = 0; index < this.state.events.length; index++) {\n        if (this.checkEventPassFilter(this.state.events[index].name, this.state.events[index].type, this.state.events[index].location)) {\n          events.push( /*#__PURE__*/React.createElement(\"div\", {\n            key: \"events-\" + index,\n            className: \"calendar__\" + this.state.events[index].type.toLowerCase(),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(Link, {\n            to: this.state.events[index].link,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }\n          }, this.state.events[index].type, \" for \", this.state.events[index].name, \" for \", this.state.events[index].location)));\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"calendar__dayEvents\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }\n      }, events);\n    } //Showing the event in the month view\n    else {\n        for (let index = 0; index < this.state.events.length; index++) {\n          if (this.checkEventPassFilter(this.state.events[index].name, this.state.events[index].type, this.state.events[index].location)) {\n            events.push( /*#__PURE__*/React.createElement(\"div\", {\n              key: \"events-\" + index,\n              className: \"calendar__\" + this.state.events[index].type.toLowerCase(),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 13\n              }\n            }, /*#__PURE__*/React.createElement(Link, {\n              to: this.state.events[index].link,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 15\n              }\n            }, this.state.events[index].type)));\n          }\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"calendar__dayBody\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-outline-primary calendar__dayHeader\",\n          onClick: () => this.showDay(),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }\n        }, this.state.value), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"calendar__dayEvents\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }\n        }, events));\n      }\n  }\n\n} //My custom made calendar\n\n\nexport default class Calendar extends Component {\n  constructor(props) {\n    super(props);\n    var date = new Date();\n    this.state = {\n      filterText: \"\",\n      filterEventType: \"\",\n      day: 1,\n      //dayComponent: null,\n      month: date.getMonth(),\n      year: date.getFullYear(),\n      mode: \"month\"\n    }; //Functions that are binded when the user types or select the filter inputs\n\n    this.onChangeFilterText = this.onChangeFilterText.bind(this);\n    this.onChangeFilterEventType = this.onChangeFilterEventType.bind(this);\n  }\n\n  componentDidMount() {\n    //Get the current date\n    var date = new Date();\n    this.setState({\n      month: date.getMonth(),\n      year: date.getFullYear()\n    });\n  }\n  /*\n  Function that returns the number of days in a month\n  Returns a number: 28, 29, 30, or 31\n  Param:\n    month: The actual month in a calendar (1-12)\n    year: The actual year in a calendar (2020)\n  */\n\n\n  daysInMonth(month, year) {\n    return new Date(year, month, 0).getDate();\n  }\n\n  prev() {\n    if (this.state.mode === \"day\") {\n      var date = new Date(this.state.year, this.state.month, this.state.day - 1);\n      this.setState({\n        day: date.getDate(),\n        month: date.getMonth(),\n        year: date.getFullYear()\n      });\n    } else if (this.state.mode === \"month\") {\n      //if the month is Jan then must go back a year and have month to Dec\n      if (this.state.month === 0) {\n        this.setState({\n          month: 11,\n          year: this.state.year - 1\n        });\n      } else {\n        //The reason for this.state.month is not decrease by one for the daysInMonth function is that the parameter is accepting not a zero index value which our month value\n        this.setState({\n          month: this.state.month - 1\n        });\n      }\n    } else if (this.state.mode === \"monthSelect\") {\n      this.setState({\n        year: this.state.year - 1\n      });\n    } else if (this.state.mode === \"yearSelect\") {\n      this.setState({\n        year: Math.floor(this.state.year / 10) * 10 - 10\n      });\n    }\n  }\n\n  next() {\n    if (this.state.mode === \"day\") {\n      var date = new Date(this.state.year, this.state.month, this.state.day + 1);\n      this.setState({\n        day: date.getDate(),\n        month: date.getMonth(),\n        year: date.getFullYear()\n      });\n    } else if (this.state.mode === \"month\") {\n      //if the month is Jan then must go back a year and have month to Dec\n      if (this.state.month === 11) {\n        this.setState({\n          month: 0,\n          year: this.state.year + 1\n        });\n      } else {\n        this.setState({\n          month: this.state.month + 1\n        });\n      }\n    } else if (this.state.mode === \"monthSelect\") {\n      this.setState({\n        year: this.state.year + 1\n      });\n    } else if (this.state.mode === \"yearSelect\") {\n      this.setState({\n        year: Math.floor(this.state.year / 10) * 10 + 10\n      });\n    }\n  } //Function that changes the body of the calendar\n  //Only gets called from the nav button on the calendar\n\n\n  changeBody() {\n    switch (this.state.mode) {\n      case \"day\":\n        this.setState({\n          mode: \"month\"\n        });\n        break;\n\n      case \"month\":\n        this.setState({\n          mode: \"monthSelect\"\n        });\n        break;\n\n      case \"monthSelect\":\n        this.setState({\n          mode: \"yearSelect\"\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n  /*\n  Function that changes the month of the calendar\n  Returns nothing (void)\n  Param:\n    index: The index value of the month selected (0-11)\n  */\n\n\n  selectMonth(index) {\n    this.setState({\n      month: index,\n      mode: \"month\"\n    });\n  }\n  /*\n  Function that changes the year of the calendar\n  Returns nothing (void)\n  Param:\n    index: The index value of the year selected\n  */\n\n\n  selectYear(index) {\n    this.setState({\n      year: index,\n      mode: \"monthSelect\"\n    });\n  }\n\n  onChangeFilterText(e) {\n    this.setState({\n      filterText: e.target.value\n    });\n  }\n\n  onChangeFilterEventType(e) {\n    this.setState({\n      filterEventType: e.target.value\n    });\n  }\n\n  renderCalendarFilter() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar__filter form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-form-label col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 13\n      }\n    }, \"Filter Text:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control col-sm-6\",\n      value: this.state.filterText,\n      onChange: this.onChangeFilterText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"col-sm-6 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 13\n      }\n    }, \"Event Type:\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.value,\n      onChange: this.onChangeFilterEventType,\n      className: \"form-control col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }\n    }, \"None\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Apply\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }\n    }, \"Apply\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Interview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }\n    }, \"Interview\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Network\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }\n    }, \"Network\"))));\n  }\n\n  renderCalendarNav() {\n    var date = new Date(this.state.year, this.state.month, 1); //Get the month name\n\n    var monthName = date.toLocaleString('default', {\n      month: 'long'\n    });\n    var navHeader;\n\n    if (this.state.mode === \"day\") {\n      navHeader = /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.changeBody(),\n        className: \"btn btn-outline-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 19\n        }\n      }, monthName, \" \", this.state.day, \" \", this.state.year);\n    }\n\n    if (this.state.mode === \"month\") {\n      navHeader = /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.changeBody(),\n        className: \"btn btn-outline-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 19\n        }\n      }, monthName, \" \", this.state.year);\n    } else if (this.state.mode === \"monthSelect\") {\n      navHeader = /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.changeBody(),\n        className: \"btn btn-outline-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 19\n        }\n      }, this.state.year);\n    } else if (this.state.mode === \"yearSelect\") {\n      navHeader = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 9\n        }\n      }, Math.floor(this.state.year / 10) * 10, \" - \", Math.floor(this.state.year / 10) * 10 + 9);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar__nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.prev(),\n      className: \"btn btn-outline-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }\n    }, \"Prev\"), navHeader, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.next(),\n      className: \"btn btn-outline-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }\n    }, \"Next\"));\n  }\n\n  renderCalendarBody() {\n    if (this.state.mode === \"day\") {\n      return this.renderDay();\n    } else if (this.state.mode === \"month\") {\n      return this.renderMonth();\n    } else if (this.state.mode === \"monthSelect\") {\n      return this.renderMonthSelect();\n    } else if (this.state.mode === \"yearSelect\") {\n      return this.renderYearSelect();\n    }\n  }\n\n  renderDay() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: this.state.day,\n      className: \"calendar__event\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CalendarDay, {\n      dateValue: new Date(this.state.year, this.state.month, this.state.day),\n      value: this.state.day,\n      getData: false,\n      showEvent: true,\n      calendar: this,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  renderMonth() {\n    //Have to find what day the first day of the month is\n    //Plan to use css grid to decide how the day will show up\n    //Get the current date\n    var firstDay = new Date(this.state.year, this.state.month, 1);\n    const days = []; //We only need to set the first day for the css class and the css grid will auto display it in a calendar\n\n    var gridClassNames;\n    var firstDayClassName = \"calendar__week_\" + firstDay.getDay();\n    gridClassNames = [firstDayClassName, \"calendar__day\"];\n    gridClassNames = gridClassNames.join(' '); //getData is used to know for grabbing the data from the database events\n\n    days.push( /*#__PURE__*/React.createElement(\"div\", {\n      key: firstDay.toDateString(),\n      className: gridClassNames,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CalendarDay, {\n      value: 1,\n      dateValue: firstDay,\n      getData: false,\n      calendar: this,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }\n    })));\n    var currentDate = firstDay;\n    var numDays = this.daysInMonth(this.state.month + 1, this.state.year);\n\n    for (let index = 2; index < numDays + 1; index++) {\n      //We have to create a new Date object due to when it is saving in the component it is using reference instead of value\n      currentDate = new Date(firstDay.getFullYear(), firstDay.getMonth(), index);\n      days.push( /*#__PURE__*/React.createElement(\"div\", {\n        key: currentDate.toDateString(),\n        className: \"calendar__day\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CalendarDay, {\n        value: index,\n        dateValue: currentDate,\n        getData: false,\n        calendar: this,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar__month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar__monthHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 11\n      }\n    }, \"SUN\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar__monthHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }\n    }, \"MON\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar__monthHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }\n    }, \"TUE\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar__monthHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 11\n      }\n    }, \"WED\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar__monthHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 11\n      }\n    }, \"THU\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar__monthHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }\n    }, \"FRI\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar__monthHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 11\n      }\n    }, \"SAT\"), days);\n  }\n\n  renderMonthSelect() {\n    const monthSelctions = [];\n    var date;\n    var monthName;\n\n    for (let index = 0; index < 12; index++) {\n      date = new Date(2020, index, 1);\n      monthName = date.toLocaleString('default', {\n        month: 'short'\n      });\n      monthSelctions.push( /*#__PURE__*/React.createElement(\"button\", {\n        key: monthName,\n        value: index,\n        onClick: () => this.selectMonth(index),\n        className: \"btn btn-outline-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 9\n        }\n      }, monthName));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar__monthSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 7\n      }\n    }, monthSelctions);\n  }\n\n  renderYearSelect() {\n    const yearSelctions = [];\n    var decadeYear = Math.floor(this.state.year / 10) * 10;\n\n    for (let index = 0; index < 10; index++) {\n      yearSelctions.push( /*#__PURE__*/React.createElement(\"button\", {\n        key: decadeYear + index,\n        value: decadeYear + index,\n        onClick: () => this.selectYear(decadeYear + index),\n        className: \"btn btn-outline-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 9\n        }\n      }, decadeYear + index));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar__yearSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 7\n      }\n    }, yearSelctions);\n  } //Plan to render a nav and a body for the calendar\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 7\n      }\n    }, this.renderCalendarFilter(), this.renderCalendarNav(), this.renderCalendarBody());\n  }\n\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/WebProject/project-and-learning-documentations-dreamteam/application-tracker/src/components/calendar/calendar.component.js"],"names":["React","Component","Link","axios","helpers","CalendarDay","constructor","props","state","dateValue","value","getData","events","showEvent","undefined","calendar","componentDidMount","dateTime","toUTCString","setHours","Promise","all","get","then","response1","response2","i","data","length","push","id","_id","name","jobapp_title","type","location","jobapp_companyname","link","event_title","event_location","setState","catch","error","console","log","checkEventPassFilter","eventName","eventType","eventLocation","toLowerCase","includes","filterText","filterEventType","showDay","day","dayComponent","mode","render","index","Calendar","date","Date","month","getMonth","year","getFullYear","onChangeFilterText","bind","onChangeFilterEventType","daysInMonth","getDate","prev","Math","floor","next","changeBody","selectMonth","selectYear","e","target","renderCalendarFilter","renderCalendarNav","monthName","toLocaleString","navHeader","renderCalendarBody","renderDay","renderMonth","renderMonthSelect","renderYearSelect","firstDay","days","gridClassNames","firstDayClassName","getDay","join","toDateString","currentDate","numDays","monthSelctions","yearSelctions","decadeYear"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport helpers from \"../../functions/susan-helperfunctions\";\n\nclass CalendarDay extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      dateValue: props.dateValue,\n      value: props.value,\n      getData: props.getData,\n      events: [],\n      showEvent: props.showEvent === undefined ? false : props.showEvent,\n      calendar: props.calendar\n    } \n  }\n  \n  componentDidMount() {\n    //Here we will grab the data from the database using Axios\n    //this.state.value = 1;\n\n    //Must have some way to get on a specific day using the dateValue\n    if (this.state.showEvent) {\n      //Convert the Date to the same timezone and time in the database\n      var dateTime = this.state.dateValue;\n      dateTime.toUTCString();\n      dateTime.setHours(20);\n      //console.log(dateTime);\n      //Make multiple request for the Job Applications and Networking\n      Promise.all([\n        axios.get('http://localhost:4000/appli-job-app-tracker/jobapps?date=' + dateTime),\n        axios.get('http://localhost:4000/appli-job-app-tracker/networking?date=' + dateTime)\n      ]).then(([response1, response2]) => {\n        var events = [];\n        //Loop through all the data in the Job Applications\n        for(var i = 0; i < response1.data.length; i++) {\n          events.push(\n            {\n              id: response1.data[i]._id, \n              name: response1.data[i].jobapp_title, \n              type: \"Apply\", \n              location: response1.data[i].jobapp_companyname,\n              link: \"/jobapp/show/\" + response1.data[i]._id\n            });\n        }\n        //Loop through all the data in the Networking\n        for(var i = 0; i < response2.data.length; i++) {\n          events.push(\n            {\n              id: response2.data[i]._id,\n              name: response2.data[i].event_title, \n              type: \"Network\",\n              location: response2.data[i].event_location,\n              link: \"/networking-events/details/\" + response2.data[i]._id\n            });\n        }\n        //Set the event data to the events\n        this.setState(\n          {events: events}\n        );\n      })\n      .catch(function(error) {\n        console.log(error);\n      })\n    }\n    //if we showing the events in the Calendar Month View\n    else {\n      //Convert the Date to the same timezone and time in the database\n      var dateTime = this.state.dateValue;\n      dateTime.toUTCString();\n      dateTime.setHours(20);\n      //console.log(dateTime);\n      //Make multiple request for the Job Applications and Networking\n      Promise.all([\n        axios.get('http://localhost:4000/appli-job-app-tracker/jobapps?date=' + dateTime),\n        axios.get('http://localhost:4000/appli-job-app-tracker/networking?date=' + dateTime)\n      ]).then(([response1, response2]) => {\n        var events = [];\n        //Loop through all the data in the Job Applications\n        for(var i = 0; i < response1.data.length; i++) {\n          events.push(\n            {\n              id: response1.data[i]._id, \n              name: response1.data[i].jobapp_title, \n              type: \"Apply\", \n              location: response1.data[i].jobapp_companyname,\n              link: \"/jobapp/show/\" + response1.data[i]._id\n            });\n        }\n        //Loop through all the data in the Networking\n        for(var i = 0; i < response2.data.length; i++) {\n          events.push(\n            {\n              id: response2.data[i]._id, \n              name: response2.data[i].event_title, \n              type: \"Network\", \n              location: response2.data[i].event_location,\n              link: \"/networking-events/details/\" + response2.data[i]._id\n            });\n        }\n        //Set the event data to the events\n        this.setState(\n          {events: events}\n        );\n      })\n      .catch(function(error) {\n        console.log(error);\n      })\n    }\n\n  }\n\n  //Function that checks if the (eventName or eventLocation) and the eventType passes the filter condition\n  //Return: bool\n    //true: if the condition is meet\n    //false: otherwise\n  //Param:\n    //eventName: The name of the event\n    //eventType: The type of the event (Apply, Interview, Network)\n    //eventLocation: The location of the event\n  checkEventPassFilter(eventName, eventType, eventLocation) {\n    if (!eventName.toLowerCase().includes(this.state.calendar.state.filterText.toLowerCase()) \n    && !eventLocation.toLowerCase().includes(this.state.calendar.state.filterText.toLowerCase())) {\n      return false;\n    }\n    if (this.state.calendar.state.filterEventType === \"\") {\n      return true;\n    }\n    else if (!(eventType === this.state.calendar.state.filterEventType)) {\n      return false;\n    }\n    return true;\n  }\n\n  //Function that will notify that the calendar must show the events of a paticular day\n  showDay() {\n    this.setState({showEvent: true});\n    this.state.calendar.setState(\n      {\n        day: this.state.value,\n        dayComponent: this,\n        mode: \"day\"\n      });\n  }\n  \n  render() {  \n    const events = [];\n    //Showing the day on the calendar\n    if (this.state.showEvent) {\n      for (let index = 0; index < this.state.events.length; index++) {\n        if (this.checkEventPassFilter(this.state.events[index].name, this.state.events[index].type, this.state.events[index].location)) {\n          events.push(\n            <div key={\"events-\" + index} className= {\"calendar__\" + this.state.events[index].type.toLowerCase()} >\n              <Link to={ this.state.events[index].link }>\n                {this.state.events[index].type} for {this.state.events[index].name} for {this.state.events[index].location}\n              </Link>\n            </div>\n            );\n        }\n      }\n      return (\n        <div className=\"calendar__dayEvents\">\n          {events}\n        </div>\n      );\n    }\n    //Showing the event in the month view\n    else {\n      for (let index = 0; index < this.state.events.length; index++) {\n        if (this.checkEventPassFilter(this.state.events[index].name, this.state.events[index].type, this.state.events[index].location)) {\n          events.push(\n            <div key={\"events-\" + index} className={\"calendar__\" + this.state.events[index].type.toLowerCase()} >\n              <Link to={ this.state.events[index].link }>\n                {this.state.events[index].type}\n              </Link>\n            </div>\n            );\n        }\n      }\n      return (\n          <div className=\"calendar__dayBody\">\n            <button className=\"btn btn-outline-primary calendar__dayHeader\" onClick={() => this.showDay()}>\n                { this.state.value }\n            </button>\n            <div className=\"calendar__dayEvents\">\n                {events}\n            </div>\n          </div>\n      );\n    }\n  }\n}\n\n//My custom made calendar\nexport default class Calendar extends Component {\n  constructor(props) {\n    super(props);\n    var date = new Date();\n    this.state = {\n        filterText: \"\",\n        filterEventType: \"\",\n        day: 1,\n        //dayComponent: null,\n        month: date.getMonth(),\n        year: date.getFullYear(),\n        mode: \"month\"\n    }\n\n    //Functions that are binded when the user types or select the filter inputs\n    this.onChangeFilterText = this.onChangeFilterText.bind(this);\n    this.onChangeFilterEventType = this.onChangeFilterEventType.bind(this);\n  }\n\n  componentDidMount() {\n    //Get the current date\n    var date = new Date();\n    this.setState({\n      month: date.getMonth(),\n      year: date.getFullYear()\n    });\n  }\n\n  /*\n  Function that returns the number of days in a month\n  Returns a number: 28, 29, 30, or 31\n  Param:\n    month: The actual month in a calendar (1-12)\n    year: The actual year in a calendar (2020)\n  */\n  daysInMonth(month, year) { \n    return new Date(year, month, 0).getDate(); \n  } \n\n  prev() {\n    if (this.state.mode === \"day\") {\n      var date = new Date(this.state.year, this.state.month, this.state.day - 1); \n      this.setState({\n        day: date.getDate(),\n        month: date.getMonth(),\n        year: date.getFullYear()\n      });\n    }\n    else if (this.state.mode === \"month\") {\n      //if the month is Jan then must go back a year and have month to Dec\n      if (this.state.month === 0) {\n        this.setState({\n          month: 11,\n          year: this.state.year - 1\n        });\n      } \n      else {\n        //The reason for this.state.month is not decrease by one for the daysInMonth function is that the parameter is accepting not a zero index value which our month value\n        this.setState({\n          month: this.state.month - 1\n        });\n      }  \n    }\n    else if (this.state.mode === \"monthSelect\") {\n      this.setState({\n        year: this.state.year - 1\n      });\n    }\n    else if (this.state.mode === \"yearSelect\") {\n      this.setState({\n        year: Math.floor(this.state.year / 10) * 10 - 10\n      });\n    }\n\n  }\n  \n  next() {\n    if (this.state.mode === \"day\") {\n      var date = new Date(this.state.year, this.state.month, this.state.day + 1); \n      this.setState({\n        day: date.getDate(),\n        month: date.getMonth(),\n        year: date.getFullYear()\n      });\n    }\n    else if (this.state.mode === \"month\") {\n      //if the month is Jan then must go back a year and have month to Dec\n      if (this.state.month === 11) {\n        this.setState({\n          month: 0,\n          year: this.state.year + 1\n        });\n      } \n      else {\n        this.setState({\n          month: this.state.month + 1\n        });\n      }  \n    }\n    else if (this.state.mode === \"monthSelect\") {\n      this.setState({\n        year: this.state.year + 1\n      });\n    }\n    else if (this.state.mode === \"yearSelect\") {\n      this.setState({\n        year: Math.floor(this.state.year / 10) * 10 + 10\n      });\n    }\n  }\n\n  //Function that changes the body of the calendar\n  //Only gets called from the nav button on the calendar\n  changeBody() {\n    switch(this.state.mode) {\n      case \"day\":\n        this.setState({mode: \"month\"});\n        break;\n      case \"month\": \n        this.setState({mode: \"monthSelect\"});\n        break;\n      case \"monthSelect\": \n        this.setState({mode: \"yearSelect\"});\n        break;\n      default:\n        break;\n    }\n  }\n\n\n  /*\n  Function that changes the month of the calendar\n  Returns nothing (void)\n  Param:\n    index: The index value of the month selected (0-11)\n  */\n  selectMonth(index) {\n    this.setState({\n      month: index,\n      mode: \"month\"\n    });\n  }\n\n  /*\n  Function that changes the year of the calendar\n  Returns nothing (void)\n  Param:\n    index: The index value of the year selected\n  */\n  selectYear(index) {\n    this.setState({\n      year: index,\n      mode: \"monthSelect\"\n    });\n  }\n\n  onChangeFilterText(e) {\n    this.setState({\n      filterText: e.target.value\n    });\n  }\n\n  onChangeFilterEventType(e) {\n    this.setState({\n      filterEventType: e.target.value\n    });\n  }\n\n  renderCalendarFilter() {\n    return (\n      <div className=\"calendar__filter form-group row\">\n        <div className=\"form-group row\">\n            <label className=\"col-form-label col-sm-6\">Filter Text:</label >\n            <input  \n              type=\"text\"\n              className=\"form-control col-sm-6\"\n              value={this.state.filterText}\n              onChange={this.onChangeFilterText}\n            />\n        </div>\n        <div className=\"form-group row\">\n            <label className=\"col-sm-6 col-form-label\">Event Type:</label>\n            <select value={this.state.value} onChange={this.onChangeFilterEventType} className=\"form-control col-sm-6\">\n                <option value=\"\">None</option>\n                <option value=\"Apply\">Apply</option>\n                <option value=\"Interview\">Interview</option>\n                <option value=\"Network\">Network</option>\n            </select>\n        </div>\n      </div>\n    );\n  }\n\n  renderCalendarNav() {\n    var date = new Date(this.state.year, this.state.month, 1);\n    //Get the month name\n    var monthName = date.toLocaleString('default', { month: 'long' });\n    var navHeader;\n    if (this.state.mode === \"day\") {\n      navHeader = <button onClick={() => this.changeBody()} className=\"btn btn-outline-primary\">{monthName} {this.state.day} {this.state.year}</button>;\n    }\n    if (this.state.mode === \"month\") {\n      navHeader = <button onClick={() => this.changeBody()} className=\"btn btn-outline-primary\">{monthName} {this.state.year}</button>;\n    } \n    else if (this.state.mode === \"monthSelect\") {\n      navHeader = <button onClick={() => this.changeBody()} className=\"btn btn-outline-primary\">{this.state.year}</button>;\n    }\n    else if (this.state.mode === \"yearSelect\") {\n      navHeader = \n        <div>\n          {Math.floor(this.state.year / 10) * 10} - {Math.floor(this.state.year / 10) * 10 + 9}\n        </div>;\n    }\n\n    return (\n      <div className=\"calendar__nav\">\n        <button onClick={() => this.prev()} className=\"btn btn-outline-primary\">Prev</button>\n        {navHeader}\n        <button onClick={() => this.next()} className=\"btn btn-outline-primary\">Next</button>\n      </div>\n    );\n\n\n  }\n\n  renderCalendarBody() {\n    if (this.state.mode === \"day\") {\n      return this.renderDay();\n    } \n    else if (this.state.mode === \"month\") {\n      return this.renderMonth();\n    }\n    else if (this.state.mode === \"monthSelect\") {\n      return this.renderMonthSelect();\n    }\n    else if (this.state.mode === \"yearSelect\") {\n      return this.renderYearSelect();\n    }\n  }\n\n  renderDay() {\n    return (\n      <div key={this.state.day} className=\"calendar__event\">\n          <CalendarDay \n            dateValue={new Date(this.state.year, this.state.month, this.state.day)}\n            value={this.state.day}\n            getData={false}\n            showEvent={true}\n            calendar={this}\n            />\n      </div>\n    );\n  }\n\n  renderMonth() {\n    //Have to find what day the first day of the month is\n    \n    //Plan to use css grid to decide how the day will show up\n\n    //Get the current date\n    var firstDay = new Date(this.state.year, this.state.month, 1);\n    const days = [];\n    \n    //We only need to set the first day for the css class and the css grid will auto display it in a calendar\n    var gridClassNames;\n    var firstDayClassName = \"calendar__week_\" + firstDay.getDay();\n    gridClassNames = [\n      firstDayClassName,\n      \"calendar__day\"\n    ];\n    gridClassNames = gridClassNames.join(' ');\n    //getData is used to know for grabbing the data from the database events\n    days.push(\n        <div key={firstDay.toDateString()} className={gridClassNames}>\n          <CalendarDay value={1} dateValue={firstDay} getData={false} calendar={this} />\n        </div>\n      );\n    \n    var currentDate = firstDay;\n    var numDays = this.daysInMonth(this.state.month + 1, this.state.year);\n    for (let index = 2; index < numDays + 1; index++) {\n      //We have to create a new Date object due to when it is saving in the component it is using reference instead of value\n      currentDate = new Date(firstDay.getFullYear(), firstDay.getMonth(), index);\n      days.push(\n        <div key={currentDate.toDateString()} className=\"calendar__day\">\n          <CalendarDay value={index} dateValue={currentDate} getData={false} calendar={this} />\n        </div>\n      );\n    }\n    return (\n        <div className=\"calendar__month\">\n          <div className=\"calendar__monthHeader\">SUN</div>\n          <div className=\"calendar__monthHeader\">MON</div>\n          <div className=\"calendar__monthHeader\">TUE</div>\n          <div className=\"calendar__monthHeader\">WED</div>\n          <div className=\"calendar__monthHeader\">THU</div>\n          <div className=\"calendar__monthHeader\">FRI</div>\n          <div className=\"calendar__monthHeader\">SAT</div>\n          {days}\n        </div>\n      );\n  }\n\n  renderMonthSelect() {\n    const monthSelctions = [];\n    var date;\n    var monthName;\n    for (let index = 0; index < 12; index++) {\n      date = new Date(2020, index, 1);\n      monthName = date.toLocaleString('default', { month: 'short' });\n      monthSelctions.push(\n        <button key={monthName} value={index} onClick={() => this.selectMonth(index)} className=\"btn btn-outline-primary\">\n          {monthName}\n        </button>\n      );\n    }\n\n    return (\n      <div className=\"calendar__monthSelect\">\n        {monthSelctions}\n      </div>\n    );\n  }\n\n  renderYearSelect() {\n    const yearSelctions = [];\n    var decadeYear = Math.floor(this.state.year / 10) * 10;\n    for (let index = 0; index < 10; index++) {\n      yearSelctions.push(\n        <button key={decadeYear + index} value={decadeYear + index} onClick={() => this.selectYear(decadeYear + index)} className=\"btn btn-outline-primary\">\n          {decadeYear + index}\n        </button>\n      );\n    }\n\n    return (\n      <div className=\"calendar__yearSelect\">\n        {yearSelctions}\n      </div>\n    );\n  }\n\n  //Plan to render a nav and a body for the calendar\n  render() {\n    return (\n      <div className=\"calendar\">\n        {this.renderCalendarFilter()}\n        {this.renderCalendarNav()}\n        {this.renderCalendarBody()}\n      </div>\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}