{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/WebProject/project-and-learning-documentations-dreamteam/application-tracker/src/components/networking-events/public-events-list.component.js\";\n\n/********** NOTE: This component reuses styling and page layout from Susan's list-networking.component.js file ****** */\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport location from \"../../../public/images/icons/location.svg\";\nimport user from \"../../../public/images/icons/user.svg\";\nimport plusbutton from \"../../../public/images/icons/plus.svg\"; //this is a networking component\n\nconst Networking = props => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"event\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"event__date\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n}, formatDate(props.networking.event_date)), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"event__info\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  className: \"event__title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 17\n  }\n}, \" \", props.networking.event_title, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"event__details tooltip-toggle\",\n  \"data-tooltip\": \"Location\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: location,\n  className: \"event__icons\",\n  alt: \"Event Icon\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"display__inlineblock\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 17\n  }\n}, \" \", props.networking.event_location)), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"event__details tooltip-toggle\",\n  \"data-tooltip\": \"Event Host\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: user,\n  className: \"event__icons\",\n  alt: \"Event Host Icon\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"display__inlineblock\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 17\n  }\n}, props.networking.event_host)), /*#__PURE__*/React.createElement(\"a\", {\n  href: '/networking-events/details/' + props.networking._id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: plusbutton,\n  className: \"event__morebtn\",\n  alt: \"See Details Button\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 76\n  }\n})))); // ---------- Functions ---------- //\n\n\nfunction formatDate(string) {\n  // Trick to get the correct date since it's giving the date back one day off:\n  // SRC: https://stackoverflow.com/questions/7556591/is-the-javascript-date-object-always-one-day-off\n  string = new Date(string.replace(/-/g, '\\/').replace(/T.+/, ''));\n  var options = {\n    month: 'short',\n    day: 'numeric'\n  };\n  return new Date(string).toLocaleDateString([], options);\n}\n/**\n * The public events list page\n */\n\n\nexport default class PublicEventsListComponent extends React.Component {\n  constructor(props) {\n    super(props); //networking state variable holds all JSON data\n\n    this.state = {\n      networking: []\n    };\n    document.title = \"Appli - Public Networking Events\";\n  }\n\n  componentDidMount() {\n    //TODO: change this to only be this logged in users applications once user accounts are set up\n    axios.get('/appli-job-app-tracker/networking').then(response => {\n      this.setState({\n        networking: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // Create eventList method:\n\n\n  eventList() {\n    //Sam - show loading spinner before data gets retrieved\n    if (this.state.networking.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"spinner-border d-flex justify-content-center\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, \"Loading...\"));\n    } // Iterate over elements\n    // map callback function gets all items\n    //TODO: Add icon to events the logged in user is attending\n\n\n    return this.state.networking.map(function (currentNetwork, i) {\n      return /*#__PURE__*/React.createElement(Networking, {\n        networking: currentNetwork,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 20\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contentcontainer\",\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \"Networking Events\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, \"Public Events\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page__nav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/networking-events\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-dark mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 55\n      }\n    }, \"Go Back\")), /*#__PURE__*/React.createElement(Link, {\n      to: \"/networking-events/add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 59\n      }\n    }, \"Add Event\"))), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"jobapplist_search\",\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, \"Search\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"search__bar\",\n      id: \"jobapplist_search\",\n      type: \"text\",\n      placeholder: \"Search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"event__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, this.eventList()));\n  }\n\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/WebProject/project-and-learning-documentations-dreamteam/application-tracker/src/components/networking-events/public-events-list.component.js"],"names":["React","Component","Link","axios","Networking","props","formatDate","networking","event_date","event_title","location","event_location","user","event_host","_id","plusbutton","string","Date","replace","options","month","day","toLocaleDateString","PublicEventsListComponent","constructor","state","document","title","componentDidMount","get","then","response","setState","data","catch","error","console","log","eventList","length","map","currentNetwork","i","render","marginTop"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;gEAOA;;AACA,MAAMC,UAAU,GAAGC,KAAK,iBACpB;AAAK,EAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKC,UAAU,CAACD,KAAK,CAACE,UAAN,CAAiBC,UAAlB,CADf,CADJ,eAII;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAI;AAAM,EAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAiCH,KAAK,CAACE,UAAN,CAAiBE,WAAlD,MAAJ,CADJ,eAEI;AAAK,EAAA,SAAS,EAAC,+BAAf;AAA+C,kBAAa,UAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAK,EAAA,GAAG,EAAEC,QAAV;AAAoB,EAAA,SAAS,EAAC,cAA9B;AAA6C,EAAA,GAAG,EAAC,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,eAEI;AAAG,EAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAsCL,KAAK,CAACE,UAAN,CAAiBI,cAAvD,CAFJ,CAFJ,eAMI;AAAK,EAAA,SAAS,EAAC,+BAAf;AAA+C,kBAAa,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAK,EAAA,GAAG,EAAEC,IAAV;AAAgB,EAAA,SAAS,EAAC,cAA1B;AAAyC,EAAA,GAAG,EAAC,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,eAEI;AAAG,EAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAqCP,KAAK,CAACE,UAAN,CAAiBM,UAAtD,CAFJ,CANJ,eAUI;AAAG,EAAA,IAAI,EAAE,gCAAgCR,KAAK,CAACE,UAAN,CAAiBO,GAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA+D;AAAK,EAAA,GAAG,EAAEC,UAAV;AAAsB,EAAA,SAAS,EAAC,gBAAhC;AAAiD,EAAA,GAAG,EAAC,oBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA/D,CAVJ,CAJJ,CADJ,C,CAoBA;;;AACA,SAAST,UAAT,CAAoBU,MAApB,EAA4B;AACxB;AACA;AACAA,EAAAA,MAAM,GAAG,IAAIC,IAAJ,CAASD,MAAM,CAACE,OAAP,CAAe,IAAf,EAAqB,IAArB,EAA2BA,OAA3B,CAAmC,KAAnC,EAA0C,EAA1C,CAAT,CAAT;AACA,MAAIC,OAAO,GAAG;AAAEC,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,GAAG,EAAE;AAAvB,GAAd;AACA,SAAO,IAAIJ,IAAJ,CAASD,MAAT,EAAiBM,kBAAjB,CAAoC,EAApC,EAAwCH,OAAxC,CAAP;AACH;AAQD;;;;;AAGA,eAAe,MAAMI,yBAAN,SAAwCvB,KAAK,CAACC,SAA9C,CAAwD;AACnEuB,EAAAA,WAAW,CAACnB,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AACA,SAAKoB,KAAL,GAAa;AAAElB,MAAAA,UAAU,EAAE;AAAd,KAAb;AAEAmB,IAAAA,QAAQ,CAACC,KAAT,GAAiB,kCAAjB;AAEH;;AAGDC,EAAAA,iBAAiB,GAAG;AAChB;AACAzB,IAAAA,KAAK,CAAC0B,GAAN,CAAU,mCAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AAAEzB,QAAAA,UAAU,EAAEwB,QAAQ,CAACE;AAAvB,OAAd;AACH,KAHL,EAIKC,KAJL,CAIW,UAAUC,KAAV,EAAiB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KANL;AAOH,GApBkE,CAsBnE;;;AACAG,EAAAA,SAAS,GAAG;AACR;AACA,QAAI,KAAKb,KAAL,CAAWlB,UAAX,CAAsBgC,MAAtB,KAAiC,CAArC,EAAwC;AACpC,0BAAQ;AAAK,QAAA,SAAS,EAAC,8CAAf;AAA8D,QAAA,IAAI,EAAC,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACJ;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADI,CAAR;AAGH,KANO,CAQR;AACA;AACA;;;AACA,WAAO,KAAKd,KAAL,CAAWlB,UAAX,CAAsBiC,GAAtB,CAA0B,UAAUC,cAAV,EAA0BC,CAA1B,EAA6B;AAC1D,0BAAO,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAED,cAAxB;AAAwC,QAAA,GAAG,EAAEC,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,CAAP;AAGH;;AAKDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA8B;AAAQ,MAAA,SAAS,EAAC,2BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA9B,CADJ,eAEI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,wBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkC;AAAQ,MAAA,SAAS,EAAC,yBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAlC,CAFJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,OAAO,EAAC,mBAAf;AAAmC,MAAA,MAAM,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,EAAE,EAAC,mBAAlC;AAAsD,MAAA,IAAI,EAAC,MAA3D;AAAkE,MAAA,WAAW,EAAC,QAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CALJ,CAHJ,eAaI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKN,SAAL,EADN,CAbJ,CADJ;AAoBH;;AA/DkE","sourcesContent":["/********** NOTE: This component reuses styling and page layout from Susan's list-networking.component.js file ****** */\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport axios from 'axios';\n\n\nimport location from \"../../../public/images/icons/location.svg\";\nimport user from \"../../../public/images/icons/user.svg\";\nimport plusbutton from \"../../../public/images/icons/plus.svg\";\n\n//this is a networking component\nconst Networking = props => (\n    <div className='event'>\n        <div className=\"event__date\">\n            {formatDate(props.networking.event_date)}\n        </div>\n        <div className='event__info'>\n            <h2><span className='event__title'> {props.networking.event_title} </span></h2>\n            <div className='event__details tooltip-toggle' data-tooltip='Location'>\n                <img src={location} className='event__icons' alt=\"Event Icon\" />\n                <p className=\"display__inlineblock\"> {props.networking.event_location}</p>\n            </div>\n            <div className='event__details tooltip-toggle' data-tooltip='Event Host'>\n                <img src={user} className='event__icons' alt=\"Event Host Icon\" />\n                <p className=\"display__inlineblock\">{props.networking.event_host}</p>\n            </div>\n            <a href={'/networking-events/details/' + props.networking._id}><img src={plusbutton} className='event__morebtn' alt=\"See Details Button\" /></a>\n        </div>\n    </div>\n)\n\n// ---------- Functions ---------- //\nfunction formatDate(string) {\n    // Trick to get the correct date since it's giving the date back one day off:\n    // SRC: https://stackoverflow.com/questions/7556591/is-the-javascript-date-object-always-one-day-off\n    string = new Date(string.replace(/-/g, '\\/').replace(/T.+/, ''));\n    var options = { month: 'short', day: 'numeric' };\n    return new Date(string).toLocaleDateString([], options);\n}\n\n\n\n\n\n\n\n/**\n * The public events list page\n */\nexport default class PublicEventsListComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        //networking state variable holds all JSON data\n        this.state = { networking: [] };\n\n        document.title = \"Appli - Public Networking Events\";\n\n    }\n\n\n    componentDidMount() {\n        //TODO: change this to only be this logged in users applications once user accounts are set up\n        axios.get('/appli-job-app-tracker/networking')\n            .then(response => {\n                this.setState({ networking: response.data })\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    // Create eventList method:\n    eventList() {\n        //Sam - show loading spinner before data gets retrieved\n        if (this.state.networking.length === 0) {\n            return (<div className=\"spinner-border d-flex justify-content-center\" role=\"status\" >\n                <span className=\"sr-only\">Loading...</span>\n            </div>)\n        }\n\n        // Iterate over elements\n        // map callback function gets all items\n        //TODO: Add icon to events the logged in user is attending\n        return this.state.networking.map(function (currentNetwork, i) {\n            return <Networking networking={currentNetwork} key={i} />;\n        })\n    }\n\n\n\n\n    render() {\n        return (\n            <div className=\"contentcontainer\" style={{ marginTop: 10 }}>\n                <h1>Networking Events</h1>\n                <h2>Public Events</h2>\n                <div className=\"page__nav\">\n                    <div>\n                        <Link to=\"/networking-events\"><button className=\"btn btn-outline-dark mr-1\">Go Back</button></Link>\n                        <Link to=\"/networking-events/add\"><button className=\"btn btn-outline-primary\">Add Event</button></Link>\n                    </div>\n                    <form>\n                        <label htmlFor=\"jobapplist_search\" hidden>Search</label>\n                        <input className=\"search__bar\" id=\"jobapplist_search\" type=\"text\" placeholder=\"Search\" ></input>\n                    </form>\n                </div>\n                <div className='event__container'>\n                    { this.eventList() }\n                </div>\n\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}