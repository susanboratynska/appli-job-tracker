{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/WebProject/project-and-learning-documentations-dreamteam/application-tracker/src/components/jobapp/pagination.component.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport ListJobAppComponent from \"./list-jobapp.component\";\nexport default class PaginationComponent extends Component {\n  constructor(props) {\n    // Taking the parent constructor and passing in props:\n    super(props); // Set initial state object to contain a property of jobapp:\n    // And that property is initially containing an empty array:\n\n    this.state = {\n      count: 1\n    };\n  }\n\n  pageClick(page) {\n    this.props.pageChange(page);\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:4000/appli-job-app-tracker/jobapps/count`).then(response => {\n      let [{\n        value\n      }] = response.data;\n      this.setState({\n        count: value\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    let perPage = 10;\n    let pageRange = 2;\n    let pages = Math.ceil(this.state.count / perPage);\n    const pageArray = [];\n\n    for (let i = 1; i <= pages; i++) {\n      if (i >= this.props.page - pageRange && i <= this.props.page + pageRange || this.props.page <= pageRange + 1 && i <= pageRange * 2 + 1) {\n        pageArray.push(i);\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pageNavigation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      basename: \"jobapp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/1`,\n      className: \"page-start\",\n      onClick: () => this.pageClick(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"<<\"), /*#__PURE__*/React.createElement(Link, {\n      to: `/${this.props.page - 1 > 0 ? this.props.page - 1 : 1}`,\n      className: \"page-back\",\n      onClick: () => this.pageClick(this.props.page - 1 > 0 ? this.props.page - 1 : 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"<\"), pageArray.map(value => {\n      if (value === this.props.page) {\n        return /*#__PURE__*/React.createElement(Link, {\n          to: `/${this.props.page}`,\n          className: \"current-page-number\",\n          onClick: () => this.pageClick(value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 32\n          }\n        }, value);\n      } else {\n        return /*#__PURE__*/React.createElement(Link, {\n          to: `/${value}`,\n          className: \"page-number\",\n          onClick: () => this.pageClick(value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 32\n          }\n        }, value);\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: `/${this.props.page + 1 <= pages ? this.props.page + 1 : pages}`,\n      className: \"page-forward\",\n      onClick: () => this.pageClick(this.props.page + 1 <= pages ? this.props.page + 1 : pages),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \">\"), /*#__PURE__*/React.createElement(Link, {\n      to: `/${pages}`,\n      className: \"page-end\",\n      onClick: () => this.pageClick(pages),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \">>\"), /*#__PURE__*/React.createElement(Route, {\n      path: \"jobapp/:pageIndex\",\n      component: ListJobAppComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/WebProject/project-and-learning-documentations-dreamteam/application-tracker/src/components/jobapp/pagination.component.js"],"names":["React","Component","BrowserRouter","Router","Route","Link","axios","ListJobAppComponent","PaginationComponent","constructor","props","state","count","pageClick","page","pageChange","componentDidMount","get","then","response","value","data","setState","catch","error","console","log","render","perPage","pageRange","pages","Math","ceil","pageArray","i","push","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport ListJobAppComponent from \"./list-jobapp.component\";\n\n\nexport default class PaginationComponent extends Component {\n    constructor(props) {\n        // Taking the parent constructor and passing in props:\n        super(props);\n        // Set initial state object to contain a property of jobapp:\n        // And that property is initially containing an empty array:\n        this.state = {count: 1};\n\n    }\n\n    pageClick(page) {\n        this.props.pageChange(page);\n    }\n\n\n    componentDidMount(){\n        axios.get(`http://localhost:4000/appli-job-app-tracker/jobapps/count`)\n            .then(response => {\n                let [{value}] = response.data\n\n                this.setState({count: value})\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n    render() {\n        let perPage = 10;\n        let pageRange = 2;\n        let pages = Math.ceil(this.state.count / perPage);\n        const pageArray = [];\n        for(let i = 1; i <= pages; i++) {\n            if(i >= this.props.page - pageRange && i <= this.props.page + pageRange || this.props.page <= pageRange + 1 && i <= pageRange * 2 + 1) {\n                pageArray.push(i);\n            }\n\n\n        }\n        return (\n            <div className='pageNavigation'>\n                <Router basename=\"jobapp\">\n                <Link to={`/1`} className='page-start' onClick={() =>this.pageClick(1)}>&lt;&lt;</Link>\n                <Link to={`/${this.props.page - 1 > 0 ? this.props.page - 1 : 1}`} className='page-back' onClick={() =>this.pageClick(this.props.page - 1 > 0 ? this.props.page - 1 : 1)}>&lt;</Link>\n                {pageArray.map((value) => {\n                    if(value === this.props.page) {\n                        return <Link to={`/${this.props.page}`} className='current-page-number' onClick={() =>this.pageClick(value)}>{value}</Link>\n                    } else {\n                        return <Link to={`/${value}`} className='page-number' onClick={() =>this.pageClick(value)}>{value}</Link>\n                    }\n\n\n                })}\n                <Link to={`/${this.props.page + 1 <= pages ? this.props.page + 1 : pages}`} className='page-forward' onClick={() =>this.pageClick(this.props.page + 1 <= pages ? this.props.page + 1 : pages)}>&gt;</Link>\n                <Link to={`/${pages}`} className='page-end' onClick={() =>this.pageClick(pages)}>&gt;&gt;</Link>\n\n\n                    <Route path=\"jobapp/:pageIndex\" component={ListJobAppComponent}/>\n                </Router>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}