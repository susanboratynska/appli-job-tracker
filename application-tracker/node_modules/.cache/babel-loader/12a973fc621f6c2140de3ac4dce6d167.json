{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/WebProject/project-and-learning-documentations-dreamteam/application-tracker/src/components/networking-events/details-networking.component.js\";\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Modal from 'react-bootstrap/Modal';\nimport axios from 'axios';\nimport queryString from 'query-string';\nexport default class DetailsNetworkingEvents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      event: [],\n      urlQueries: queryString.parse(this.props.location.search),\n      show: false,\n      //whether or not the modal is showing\n      redirectToMyList: false //whether or not to redirect to the my event list page\n\n    };\n    document.title = \"Appli - Networking Event Details\";\n    this.handleClose = this.handleClose.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n  }\n\n  componentDidMount() {\n    //TODO: check for missing id\n    axios.get('/appli-job-app-tracker/networking/' + this.props.match.params.id).then(response => {\n      this.setState({\n        event: response.data\n      });\n      console.log(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  drawPageContent() {\n    //return the spinner if the db content isn't loaded yet\n    if (this.state.event.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/networking-events\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-outline-dark mr-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 59\n        }\n      }, \"Go Back\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"spinner-border d-flex justify-content-center\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }\n      }, \"Loading...\")))));\n    } //else, if db content has been loaded\n    //convert the date string to the text representation ie. 10 -> October\n\n\n    let eventDate = new Date(this.state.event.event_date); //add a day because it subtracts a day for some reason\n\n    eventDate.setDate(eventDate.getDate() + 1);\n    console.log(eventDate);\n    let options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    eventDate = eventDate.toLocaleString('en-CA', options);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/networking-events\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-dark mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 59\n      }\n    }, \"Go Back\")), /*#__PURE__*/React.createElement(Link, {\n      to: \"/networking-events/update/\" + this.state.event._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-secondary mr-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 92\n      }\n    }, \"Update Event\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-danger\",\n      onClick: this.handleShow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, \"Delete\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, this.state.event.event_title), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, eventDate), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, this.state.event.event_location), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, this.state.event.event_host), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, this.state.event.event_description), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, \"Is this a public event? \", this.state.event.event_is_public), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, \"Your rating: \", this.state.event.event_rating), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: this.state.event.event_link,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 34\n      }\n    }, \"Link to event\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, \"Notes: \", this.state.event.event_notes)))), /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.show,\n      onHide: this.handleClose,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, \"Are you sure you want to delete this event from the database?\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-dark\",\n      onClick: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: () => this.handleDelete(this.state.event._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, \"Delete\"))));\n  } //MODAL METHODS\n\n\n  handleClose() {\n    console.log(\"hiding modal...\");\n    this.setState({\n      show: false\n    });\n  }\n\n  handleShow() {\n    console.log(\"showing modal...\");\n    this.setState({\n      show: true\n    });\n  }\n  /**\n   * Deletes an entry at the given id\n   * @param {string} id the id of the entry being deleted\n   */\n\n\n  handleDelete(id) {\n    console.log(\"deleting entry with id = \" + id);\n    axios.get(\"/appli-job-app-tracker/networking/delete/\" + id).then(response => {\n      console.log(response);\n\n      if (response.status === 200) {\n        console.log(\"Event successfully deleted.\"); //event deleted, redirect to list page\n\n        this.setState({\n          redirectToMyList: true\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n  /**\n   * Checks if there are any CRUD actions in the URL and prints an alert panel to show it (ie. url?action=added will print a panel showing something has been added)\n   */\n\n\n  checkForAlerts() {\n    if (this.state.urlQueries.action === \"added\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"alert alert-success \",\n        role: \"alert\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, \"Networking event successfully added.\");\n    }\n\n    if (this.state.urlQueries.action === \"updated\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"alert alert-info \",\n        role: \"alert\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }, \"Networking event successfully updated.\");\n    }\n  }\n\n  render() {\n    //check state variable to see if it needs to redirect to my events page\n    if (this.state.redirectToMyList == true) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/networking-events/my-events?action=deleted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contentcontainer\",\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, \"Networking Events\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, \"Networking Event Details\"), this.checkForAlerts(), this.drawPageContent());\n  }\n\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/WebProject/project-and-learning-documentations-dreamteam/application-tracker/src/components/networking-events/details-networking.component.js"],"names":["React","Link","Redirect","Modal","axios","queryString","DetailsNetworkingEvents","Component","constructor","props","state","event","urlQueries","parse","location","search","show","redirectToMyList","document","title","handleClose","bind","handleShow","componentDidMount","get","match","params","id","then","response","setState","data","console","log","catch","error","drawPageContent","length","eventDate","Date","event_date","setDate","getDate","options","weekday","year","month","day","toLocaleString","_id","event_title","event_location","event_host","event_description","event_is_public","event_rating","event_link","event_notes","handleDelete","status","checkForAlerts","action","render","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Modal from 'react-bootstrap/Modal';\n\nimport axios from 'axios';\nimport queryString from 'query-string';\n\n\nexport default class DetailsNetworkingEvents extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            event: [],\n            urlQueries: queryString.parse(this.props.location.search),\n            show: false,  //whether or not the modal is showing\n            redirectToMyList: false //whether or not to redirect to the my event list page\n        }\n\n        document.title = \"Appli - Networking Event Details\";\n\n        this.handleClose = this.handleClose.bind(this);\n        this.handleShow = this.handleShow.bind(this);\n\n    }\n\n    componentDidMount() {\n        //TODO: check for missing id\n\n        axios.get('/appli-job-app-tracker/networking/' + this.props.match.params.id)\n            .then(response => {\n                this.setState({ event: response.data })\n                console.log(response.data);\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n\n\n    drawPageContent() {\n        //return the spinner if the db content isn't loaded yet\n        if (this.state.event.length === 0) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm\">\n                            <Link to=\"/networking-events\"><button className=\"btn btn-outline-dark mr-1\" >Go Back</button></Link>\n                        </div>\n                        <div className=\"col-sm\">\n                            <div className=\"spinner-border d-flex justify-content-center\" role=\"status\" >\n                                <span className=\"sr-only\">Loading...</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n\n        //else, if db content has been loaded\n\n        //convert the date string to the text representation ie. 10 -> October\n        let eventDate = new Date(this.state.event.event_date);\n        //add a day because it subtracts a day for some reason\n        eventDate.setDate(eventDate.getDate() + 1);\n        console.log(eventDate);\n        let options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n        eventDate = eventDate.toLocaleString('en-CA', options);\n\n        return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm\">\n                            <Link to=\"/networking-events\"><button className=\"btn btn-outline-dark mr-1\" >Go Back</button></Link>\n                            <Link to={\"/networking-events/update/\" + this.state.event._id}><button className=\"btn btn-outline-secondary mr-1\">Update Event</button></Link>\n                            <button className=\"btn btn-outline-danger\" onClick={this.handleShow} >Delete</button>\n                        </div>\n                        <div className=\"col-sm\">\n                            <h3>{this.state.event.event_title}</h3>\n                            <div>{eventDate}</div>\n                            <div>{this.state.event.event_location}</div>\n                            <div>{this.state.event.event_host}</div>\n                            <div>{this.state.event.event_description}</div>\n                            <div>Is this a public event? {this.state.event.event_is_public}</div>\n                            <div>Your rating: {this.state.event.event_rating}</div>\n                            <div><a href={this.state.event.event_link} target=\"_blank\">Link to event</a></div>\n                            <div>Notes: {this.state.event.event_notes}</div>\n                        </div>\n                    </div>\n                </div>\n                {/*<!-- Modal --> https://bit.dev/react-bootstrap/react-bootstrap/modal*/}\n                <Modal show={this.state.show} onHide={this.handleClose}\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered >\n                    <Modal.Header closeButton>\n                        <Modal.Title></Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Are you sure you want to delete this event from the database?</Modal.Body>\n                    <Modal.Footer>\n                        <button className=\"btn btn-outline-dark\" onClick={this.handleClose}>\n                            Cancel\n                        </button>\n                        <button className=\"btn btn-danger\" onClick={() => this.handleDelete(this.state.event._id)}>\n                            Delete\n                        </button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n\n        )\n\n    }\n\n    //MODAL METHODS\n    handleClose() {\n        console.log(\"hiding modal...\");\n        this.setState({ show: false });\n    }\n\n    handleShow() {\n        console.log(\"showing modal...\");\n        this.setState({ show: true });\n    }\n\n    /**\n     * Deletes an entry at the given id\n     * @param {string} id the id of the entry being deleted\n     */\n    handleDelete(id) {\n        console.log(\"deleting entry with id = \" + id);\n        axios.get(\"/appli-job-app-tracker/networking/delete/\" + id)\n            .then(response => {\n                console.log(response);\n                if (response.status === 200) {\n                    console.log(\"Event successfully deleted.\");\n                    //event deleted, redirect to list page\n                    this.setState({ redirectToMyList: true });\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    /**\n     * Checks if there are any CRUD actions in the URL and prints an alert panel to show it (ie. url?action=added will print a panel showing something has been added)\n     */\n    checkForAlerts() {\n        if (this.state.urlQueries.action === \"added\") {\n            return (\n                <div class=\"alert alert-success \" role=\"alert\">\n                    Networking event successfully added.\n                </div>\n            )\n        }\n        if (this.state.urlQueries.action === \"updated\") {\n            return (\n                <div class=\"alert alert-info \" role=\"alert\">\n                    Networking event successfully updated.\n                </div>\n            )\n        }\n    }\n\n\n\n\n\n\n    render() {\n        //check state variable to see if it needs to redirect to my events page\n        if (this.state.redirectToMyList == true) {\n            return <Redirect to=\"/networking-events/my-events?action=deleted\" />\n        }\n        return (\n            <div className=\"contentcontainer\" style={{ marginTop: 10 }}>\n                <h1>Networking Events</h1>\n                <h2>Networking Event Details</h2>\n                {this.checkForAlerts()}\n\n\n                {this.drawPageContent()}\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}