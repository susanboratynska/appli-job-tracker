{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/WebProject/project-and-learning-documentations-dreamteam/application-tracker/src/components/networking-events/short-public-events.component.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n/**\n * This component loads the short list of my events on the networking-home.component\n */\n\nexport default class ShortPublicEventsComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      eventList: [],\n      dataReceived: false\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/appli-job-app-tracker/networking/getPublicEventsShort').then(response => {\n      console.log(response);\n      this.setState({\n        networking: response.data,\n        dataReceived: true\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  drawContent() {\n    if (this.state.eventList.length === 0 && this.state.dataReceived === false) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"spinner-border d-flex justify-content-center\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"sr-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, \"Loading...\"));\n    } //if data is retrieved but there are no events in the system, say there are currently no events in the system\n    else if (this.state.eventList.length === 0 && this.state.dataReceived === true) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"mt-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 20\n          }\n        }, \"There are currently no public events in the system.\");\n      }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, this.state.eventList.map((event, iteration) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 33\n        }\n      }, event.event_title), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 33\n        }\n      }, event.event_location, \" | Friday June 12 2020\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/networking-events/details/\" + event._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 38\n        }\n      }, \"Details\")));\n    })));\n  } //TODO: replace dummy content with database entries\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"eventPublicListHolder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, \"Public Events\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, \"Latest Events:\"), this.drawContent(), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/networking-events/public-events\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \"See More \\u2192\")));\n  }\n\n}","map":{"version":3,"sources":["/Applications/MAMP/htdocs/WebProject/project-and-learning-documentations-dreamteam/application-tracker/src/components/networking-events/short-public-events.component.js"],"names":["React","Component","Link","axios","ShortPublicEventsComponent","constructor","props","state","eventList","dataReceived","componentDidMount","get","then","response","console","log","setState","networking","data","catch","error","drawContent","length","map","event","iteration","event_title","event_location","_id","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport axios from 'axios';\n\n\n/**\n * This component loads the short list of my events on the networking-home.component\n */\nexport default class ShortPublicEventsComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventList: [],\n            dataReceived: false\n        }\n    }\n\n    componentDidMount() {\n        axios.get('/appli-job-app-tracker/networking/getPublicEventsShort')\n            .then(response => {\n                console.log(response);\n                this.setState({ networking: response.data, dataReceived: true });\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    drawContent() {\n        if (this.state.eventList.length === 0 && this.state.dataReceived === false) {\n            return (<div className=\"spinner-border d-flex justify-content-center\" role=\"status\" >\n                <span className=\"sr-only\">Loading...</span>\n            </div>)\n        }\n        //if data is retrieved but there are no events in the system, say there are currently no events in the system\n        else if (this.state.eventList.length === 0 && this.state.dataReceived === true) {\n            return <div className=\"mt-3\">There are currently no public events in the system.</div>\n        }\n\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    {this.state.eventList.map((event, iteration) => {\n                        return (\n                            <div className=\"col-sm\">\n                                <h5>{event.event_title}</h5>\n                                <div>{event.event_location} | Friday June 12 2020</div>\n                                <div><Link to={\"/networking-events/details/\" + event._id}>Details</Link></div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n\n    //TODO: replace dummy content with database entries\n    render() {\n        return (\n            <div className=\"eventPublicListHolder\">\n                <h2>Public Events</h2>\n                <p>Latest Events:</p>\n                {this.drawContent()}\n                <div className=\"d-flex justify-content-end\">\n                    <Link to=\"/networking-events/public-events\">See More &rarr;</Link>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}